[{"title": "How does Ethereum work,\u00a0anyway?", "author_name": "Preethi Kasireddy", "author_profile_link": "https://medium.com/@preethikasireddy", "link": "https://medium.com/@preethikasireddy/how-does-ethereum-work-anyway-22d1df506369?source=search_post---------0", "post_date": "Sep 27, 2017", "readtime": "33 min read", "upvotes": "48K", "content": "How does Ethereum work,\u00a0anyway?Preethi KasireddyBlockedUnblockFollowFollowingSep 27, 2017Source: r/ethereumIntroductionOdds are you\u2019ve heard about the Ethereum blockchain, whether or not you know what it is. It\u2019s been in the news a lot lately, including the cover of some major magazines, but reading those articles can be like gibberish if you don\u2019t have a foundation for what exactly Ethereum is. So what is it? In essence, a public database that keeps a permanent record of digital transactions. Importantly, this database doesn\u2019t require any central authority to maintain and secure it. Instead it operates as a \u201ctrustless\u201d transactional system\u200a\u2014\u200aa framework in which individuals can make peer-to-peer transactions without needing to trust a third party OR one another.Still confused? That\u2019s where this post comes in. My aim is to explain how Ethereum functions at a technical level, without complex math or scary-looking formulas. Even if you\u2019re not a programmer, I hope you\u2019ll walk away with at least better grasp of the tech. If some parts are too technical and difficult to grok, that\u2019s totally fine! There\u2019s really no need to understand every little detail. I recommend just focusing on understanding things at a broad level.\u00a0Many of the topics covered in this post are a breakdown of the concepts discussed in the yellow paper. I\u2019ve added my own explanations and diagrams to make understanding Ethereum easier. Those brave enough to take on the technical challenge can also read the Ethereum yellow paper.Let\u2019s get started!Blockchain definitionA blockchain is a \u201ccryptographically secure transactional singleton machine with shared-state.\u201d [1] That\u2019s a mouthful, isn\u2019t it? Let\u2019s break it down.\u201cCryptographically secure\u201d means that the creation of digital currency is secured by complex mathematical algorithms that are obscenely hard to break. Think of a firewall of sorts. They make it nearly impossible to cheat the system (e.g. create fake transactions, erase transactions, etc.)\u201cTransactional singleton machine\u201d means that there\u2019s a single canonical instance of the machine responsible for all the transactions being created in the system. In other words, there\u2019s a single global truth that everyone believes in.\u201cWith shared-state\u201d means that the state stored on this machine is shared and open to everyone.Ethereum implements this blockchain paradigm.The Ethereum blockchain paradigm explainedThe Ethereum blockchain is essentially a transaction-based state machine. In computer science, a state machine refers to something that will read a series of inputs and, based on those inputs, will transition to a new state.With Ethereum\u2019s state machine, we begin with a \u201cgenesis state.\u201d This is analogous to a blank slate, before any transactions have happened on the network. When transactions are executed, this genesis state transitions into some final state. At any point in time, this final state represents the current state of Ethereum.The state of Ethereum has millions of transactions. These transactions are grouped into \u201cblocks.\u201d A block contains a series of transactions, and each block is chained together with its previous block.To cause a transition from one state to the next, a transaction must be valid. For a transaction to be considered valid, it must go through a validation process known as mining. Mining is when a group of nodes (i.e. computers) expend their compute resources to create a block of valid transactions.Any node on the network that declares itself as a miner can attempt to create and validate a block. Lots of miners from around the world try to create and validate blocks at the same time. Each miner provides a mathematical \u201cproof\u201d when submitting a block to the blockchain, and this proof acts as a guarantee: if the proof exists, the block must be valid.For a block to be added to the main blockchain, the miner must prove it faster than any other competitor miner. The process of validating each block by having a miner provide a mathematical proof is known as a \u201cproof of work.\u201dA miner who validates a new block is rewarded with a certain amount of value for doing this work. What is that value? The Ethereum blockchain uses an intrinsic digital token called \u201cEther.\u201d Every time a miner proves a block, new Ether tokens are generated and awarded.You might wonder: what guarantees that everyone sticks to one chain of blocks? How can we be sure that there doesn\u2019t exist a subset of miners who will decide to create their own chain of blocks?Earlier, we defined a blockchain as a transactional singleton machine with shared-state. Using this definition, we can understand the correct current state is a single global truth, which everyone must accept. Having multiple states (or chains) would ruin the whole system, because it would be impossible to agree on which state was the correct one. If the chains were to diverge, you might own 10 coins on one chain, 20 on another, and 40 on another. In this scenario, there would be no way to determine which chain was the most \u201cvalid.\u201dWhenever multiple paths are generated, a \u201cfork\u201d occurs. We typically want to avoid forks, because they disrupt the system and force people to choose which chain they \u201cbelieve\u201d in.To determine which path is most valid and prevent multiple chains, Ethereum uses a mechanism called the \u201cGHOST protocol.\u201d\u201cGHOST\u201d = \u201cGreedy Heaviest Observed Subtree\u201dIn simple terms, the GHOST protocol says we must pick the path that has had the most computation done upon it. One way to determine that path is to use the block number of the most recent block (the \u201cleaf block\u201d), which represents the total number of blocks in the current path (not counting the genesis block). The higher the block number, the longer the path and the greater the mining effort that must have gone into arriving at the leaf. Using this reasoning allows us to agree on the canonical version of the current state.Now that you\u2019ve gotten the 10,000-foot overview of what a blockchain is, let\u2019s dive deeper into the main components that the Ethereum system is comprised of:accountsstategas and feestransactionsblockstransaction executionminingproof of workOne note before getting started: whenever I say \u201chash\u201d of X, I am referring to the KECCAK-256 hash, which Ethereum uses.AccountsThe global \u201cshared-state\u201d of Ethereum is comprised of many small objects (\u201caccounts\u201d) that are able to interact with one another through a message-passing framework. Each account has a state associated with it and a 20-byte address. An address in Ethereum is a 160-bit identifier that is used to identify any account.There are two types of accounts:Externally owned accounts, which are controlled by private keys and have no code associated with them.Contract accounts, which are controlled by their contract code and have code associated with them.Externally owned accounts vs. contract\u00a0accountsIt\u2019s important to understand a fundamental difference between externally owned accounts and contract accounts. An externally owned account can send messages to other externally owned accounts OR to other contract accounts by creating and signing a transaction using its private key. A message between two externally owned accounts is simply a value transfer. But a message from an externally owned account to a contract account activates the contract account\u2019s code, allowing it to perform various actions (e.g. transfer tokens, write to internal storage, mint new tokens, perform some calculation, create new contracts, etc.).Unlike externally owned accounts, contract accounts can\u2019t initiate new transactions on their own. Instead, contract accounts can only fire transactions in response to other transactions they have received (from an externally owned account or from another contract account). We\u2019ll learn more about contract-to-contract calls in the \u201cTransactions and Messages\u201d section.Therefore, any action that occurs on the Ethereum blockchain is always set in motion by transactions fired from externally controlled accounts.Account stateThe account state consists of four components, which are present regardless of the type of account:nonce: If the account is an externally owned account, this number represents the number of transactions sent from the account\u2019s address. If the account is a contract account, the nonce is the number of contracts created by the account.balance: The number of Wei owned by this address. There are 1e+18 Wei per Ether.storageRoot: A hash of the root node of a Merkle Patricia tree (we\u2019ll explain Merkle trees later on). This tree encodes the hash of the storage contents of this account, and is empty by default.codeHash: The hash of the EVM (Ethereum Virtual Machine\u200a\u2014\u200amore on this later) code of this account. For contract accounts, this is the code that gets hashed and stored as the codeHash. For externally owned accounts, the codeHash field is the hash of the empty string.World stateOkay, so we know that Ethereum\u2019s global state consists of a mapping between account addresses and the account states. This mapping is stored in a data structure known as a Merkle Patricia tree.A Merkle tree (or also referred as \u201cMerkle trie\u201d) is a type of binary tree composed of a set of nodes with:a large number of leaf nodes at the bottom of the tree that contain the underlying dataa set of intermediate nodes, where each node is the hash of its two child nodesa single root node, also formed from the hash of its two child node, representing the top of the treeThe data at the bottom of the tree is generated by splitting the data that we want to store into chunks, then splitting the chunks into buckets, and then taking the hash of each bucket and repeating the same process until the total number of hashes remaining becomes only one: the root hash.This tree is required to have a key for every value stored inside it. Beginning from the root node of the tree, the key should tell you which child node to follow to get to the corresponding value, which is stored in the leaf nodes. In Ethereum\u2019s case, the key/value mapping for the state tree is between addresses and their associated accounts, including the balance, nonce, codeHash, and storageRoot for each account (where the storageRoot is itself a tree).Source: Ethereum whitepaperThis same trie structure is used also to store transactions and receipts. More specifically, every block has a \u201cheader\u201d which stores the hash of the root node of three different Merkle trie structures, including:State trieTransactions trieReceipts trieThe ability to store all this information efficiently in Merkle tries is incredibly useful in Ethereum for what we call \u201clight clients\u201d or \u201clight nodes.\u201d Remember that a blockchain is maintained by a bunch of nodes. Broadly speaking, there are two types of nodes: full nodes and light nodes.A full archive node synchronizes the blockchain by downloading the full chain, from the genesis block to the current head block, executing all of the transactions contained within. Typically, miners store the full archive node, because they are required to do so for the mining process. It is also possible to download a full node without executing every transaction. Regardless, any full node contains the entire chain.But unless a node needs to execute every transaction or easily query historical data, there\u2019s really no need to store the entire chain. This is where the concept of a light node comes in. Instead of downloading and storing the full chain and executing all of the transactions, light nodes download only the chain of headers, from the genesis block to the current head, without executing any transactions or retrieving any associated state. Because light nodes have access to block headers, which contain hashes of three tries, they can still easily generate and receive verifiable answers about transactions, events, balances, etc.The reason this works is because hashes in the Merkle tree propagate upward\u200a\u2014\u200aif a malicious user attempts to swap a fake transaction into the bottom of a Merkle tree, this change will cause a change in the hash of the node above, which will change the hash of the node above that, and so on, until it eventually changes the root of the tree.Any node that wants to verify a piece of data can use something called a \u201cMerkle proof\u201d to do so. A Merkle proof consists of:A chunk of data to be verified and its hashThe root hash of the treeThe \u201cbranch\u201d (all of the partner hashes going up along the path from the chunk to the root)Anyone reading the proof can verify that the hashing for that branch is consistent all the way up the tree, and therefore that the given chunk is actually at that position in the tree.In summary, the benefit of using a Merkle Patricia tree is that the root node of this structure is cryptographically dependent on the data stored in the tree, and so the hash of the root node can be used as a secure identity for this data. Since the block header includes the root hash of the state, transactions, and receipts trees, any node can validate a small part of state of Ethereum without needing to store the entire state, which can be potentially unbounded in size.Gas and\u00a0paymentOne very important concept in Ethereum is the concept of fees. Every computation that occurs as a result of a transaction on the Ethereum network incurs a fee\u200a\u2014\u200athere\u2019s no free lunch! This fee is paid in a denomination called \u201cgas.\u201dGas is the unit used to measure the fees required for a particular computation. Gas price is the amount of Ether you are willing to spend on every unit of gas, and is measured in \u201cgwei.\u201d \u201cWei\u201d is the smallest unit of Ether, where 1\u2070\u00b9\u2078 Wei represents 1 Ether. One gwei is 1,000,000,000 Wei.With every transaction, a sender sets a gas limit and gas price. The product of gas price and gas limit represents the maximum amount of Wei that the sender is willing to pay for executing a transaction.For example, let\u2019s say the sender sets the gas limit to 50,000 and a gas price to 20 gwei. This implies that the sender is willing to spend at most 50,000 x 20 gwei = 1,000,000,000,000,000 Wei = 0.001 Ether to execute that transaction.Remember that the gas limit represents the maximum gas the sender is willing to spend money on. If they have enough Ether in their account balance to cover this maximum, they\u2019re good to go. The sender is refunded for any unused gas at the end of the transaction, exchanged at the original rate.In the case that the sender does not provide the necessary gas to execute the transaction, the transaction runs \u201cout of gas\u201d and is considered invalid. In this case, the transaction processing aborts and any state changes that occurred are reversed, such that we end up back at the state of Ethereum prior to the transaction. Additionally, a record of the transaction failing gets recorded, showing what transaction was attempted and where it failed. And since the machine already expended effort to run the calculations before running out of gas, logically, none of the gas is refunded to the sender.Where exactly does this gas money go? All the money spent on gas by the sender is sent to the \u201cbeneficiary\u201d address, which is typically the miner\u2019s address. Since miners are expending the effort to run computations and validate transactions, miners receive the gas fee as a reward.Typically, the higher the gas price the sender is willing to pay, the greater the value the miner derives from the transaction. Thus, the more likely miners will be to select it. In this way, miners are free to choose which transactions they want to validate or ignore. In order to guide senders on what gas price to set, miners have the option of advertising the minimum gas price for which they will execute transactions.There are fees for storage,\u00a0tooNot only is gas used to pay for computation steps, it is also used to pay for storage usage. The total fee for storage is proportional to the smallest multiple of 32 bytes used.Fees for storage have some nuanced aspects. For example, since increased storage increases the size of the Ethereum state database on all nodes, there\u2019s an incentive to keep the amount of data stored small. For this reason, if a transaction has a step that clears an entry in the storage, the fee for executing that operation of is waived, AND a refund is given for freeing up storage space.What\u2019s the purpose of\u00a0fees?One important aspect of the way the Ethereum works is that every single operation executed by the network is simultaneously effected by every full node. However, computational steps on the Ethereum Virtual Machine are very expensive. Therefore, Ethereum smart contracts are best used for simple tasks, like running simple business logic or verifying signatures and other cryptographic objects, rather than more complex uses, like file storage, email, or machine learning, which can put a strain on the network. Imposing fees prevents users from overtaxing the network.Ethereum is a Turing complete language. (In short, a Turing machine is a machine that can simulate any computer algorithm (for those not familiar with Turing machines, check out this and this). This allows for loops and makes Ethereum susceptible to the halting problem, a problem in which you cannot determine whether or not a program will run infinitely. If there were no fees, a malicious actor could easily try to disrupt the network by executing an infinite loop within a transaction, without any repercussions. Thus, fees protect the network from deliberate attacks.You might be thinking, \u201cwhy do we also have to pay for storage?\u201d Well, just like computation, storage on the Ethereum network is a cost that the entire network has to take the burden of.Transaction and\u00a0messagesWe noted earlier that Ethereum is a transaction-based state machine. In other words, transactions occurring between different accounts are what move the global state of Ethereum from one state to the next.In the most basic sense, a transaction is a cryptographically signed piece of instruction that is generated by an externally owned account, serialized, and then submitted to the blockchain.There are two types of transactions: message calls and contract creations (i.e. transactions that create new Ethereum contracts).\u00a0\u00a0\u00a0All transactions contain the following components, regardless of their type:nonce: a count of the number of transactions sent by the sender.gasPrice: the number of Wei that the sender is willing to pay per unit of gas required to execute the transaction.gasLimit: the maximum amount of gas that the sender is willing to pay for executing this transaction. This amount is set and paid upfront, before any computation is done.to: the address of the recipient. In a contract-creating transaction, the contract account address does not yet exist, and so an empty value is used.value: the amount of Wei to be transferred from the sender to the recipient. In a contract-creating transaction, this value serves as the starting balance within the newly created contract account.v, r, s: used to generate the signature that identifies the sender of the transaction.init (only exists for contract-creating transactions): An EVM code fragment that is used to initialize the new contract account. init is run only once, and then is discarded. When init is first run, it returns the body of the account code, which is the piece of code that is permanently associated with the contract account.data (optional field that only exists for message calls): the input data (i.e. parameters) of the message call. For example, if a smart contract serves as a domain registration service, a call to that contract might expect input fields such as the domain and IP address.We learned in the \u201cAccounts\u201d section that transactions\u200a\u2014\u200aboth message calls and contract-creating transactions\u200a\u2014\u200aare always initiated by externally owned accounts and submitted to the blockchain. Another way to think about it is that transactions are what bridge the external world to the internal state of Ethereum.But this doesn\u2019t mean that contracts can\u2019t talk to other contracts. Contracts that exist within the global scope of Ethereum\u2019s state can talk to other contracts within that same scope. The way they do this is via \u201cmessages\u201d or \u201cinternal transactions\u201d to other contracts. We can think of messages or internal transactions as being similar to transactions, with the major difference that they are NOT generated by externally owned accounts. Instead, they are generated by contracts. They are virtual objects that, unlike transactions, are not serialized and only exist in the Ethereum execution environment.When one contract sends an internal transaction to another contract, the associated code that exists on the recipient contract account is executed.One important thing to note is that internal transactions or messages don\u2019t contain a gasLimit. This is because the gas limit is determined by the external creator of the original transaction (i.e. some externally owned account). The gas limit that the externally owned account sets must be high enough to carry out the transaction, including any sub-executions that occur as a result of that transaction, such as contract-to-contract messages. If, in the chain of transactions and messages, a particular message execution runs out of gas, then that message\u2019s execution will revert, along with any subsequent messages triggered by the execution. However, the parent execution does not need to revert.BlocksAll transactions are grouped together into \u201cblocks.\u201d A blockchain contains a series of such blocks that are chained together.In Ethereum, a block consists of:the block headerinformation about the set of transactions included in that blocka set of other block headers for the current block\u2019s ommers.Ommers explainedWhat the heck is an \u201commer?\u201d An ommer is a block whose parent is equal to the current block\u2019s parent\u2019s parent. Let\u2019s take a quick dive into what ommers are used for and why a block contains the block headers for ommers.Because of the way Ethereum is built, block times are much lower (~15 seconds) than those of other blockchains, like Bitcoin (~10 minutes). This enables faster transaction processing. However, one of the downsides of shorter block times is that more competing block solutions are found by miners. These competing blocks are also referred to as \u201corphaned blocks\u201d (i.e. mined blocks do not make it into the main chain).The purpose of ommers is to help reward miners for including these orphaned blocks. The ommers that miners include must be \u201cvalid,\u201d meaning within the sixth generation or smaller of the present block. After six children, stale orphaned blocks can no longer be referenced (because including older transactions would complicate things a bit).Ommer blocks receive a smaller reward than a full block. Nonetheless, there\u2019s still some incentive for miners to include these orphaned blocks and reap a reward.Block headerLet\u2019s get back to blocks for a moment. We mentioned previously that every block has a block \u201cheader,\u201d but what exactly is this?\u00a0\u00a0\u00a0A block header is a portion of the block consisting of:parentHash: a hash of the parent block\u2019s header (this is what makes the block set a \u201cchain\u201d)ommersHash: a hash of the current block\u2019s list of ommersbeneficiary: the account address that receives the fees for mining this blockstateRoot: the hash of the root node of the state trie (recall how we learned that the state trie is stored in the header and makes it easy for light clients to verify anything about the state)transactionsRoot: the hash of the root node of the trie that contains all transactions listed in this blockreceiptsRoot: the hash of the root node of the trie that contains the receipts of all transactions listed in this blocklogsBloom: a Bloom filter (data structure) that consists of log informationdifficulty: the difficulty level of this blocknumber: the count of current block (the genesis block has a block number of zero; the block number increases by 1 for each each subsequent block)gasLimit: the current gas limit per blockgasUsed: the sum of the total gas used by transactions in this blocktimestamp: the unix timestamp of this block\u2019s inceptionextraData: extra data related to this blockmixHash: a hash that, when combined with the nonce, proves that this block has carried out enough computationnonce: a hash that, when combined with the mixHash, proves that this block has carried out enough computationNotice how every block header contains three trie structures for:state (stateRoot)transactions (transactionsRoot)receipts (receiptsRoot)These trie structures are nothing but the Merkle Patricia tries we discussed earlier.Additionally, there are a few terms from the above description that are worth clarifying. Let\u2019s take a look.LogsEthereum allows for logs to make it possible to track various transactions and messages. A contract can explicitly generate a log by defining \u201cevents\u201d that it wants to log.A log entry contains:the logger\u2019s account address,a series of topics that represent various events carried out by this transaction, andany data associated with these events.Logs are stored in a bloom filter, which stores the endless log data in an efficient manner.Transaction receiptLogs stored in the header come from the log information contained in the transaction receipt. Just as you receive a receipt when you buy something at a store, Ethereum generates a receipt for every transaction. Like you\u2019d expect, each receipt contains certain information about the transaction. This receipt includes items like:the block numberblock hashtransaction hashgas used by the current transactioncumulative gas used in the current block after the current transaction has executedlogs created when executing the current transaction..and so onBlock difficultyThe \u201cdifficulty\u201d of a block is used to enforce consistency in the time it takes to validate blocks. The genesis block has a difficulty of 131,072, and a special formula is used to calculate the difficulty of every block thereafter. If a certain block is validated more quickly than the previous block, the Ethereum protocol increases that block\u2019s difficulty.The difficulty of the block affects the nonce, which is a hash that must be calculated when mining a block, using the proof-of-work algorithm.The relationship between the block\u2019s difficulty and nonce is mathematically formalized as:where Hd is the difficulty.The only way to find a nonce that meets a difficulty threshold is to use the proof-of-work algorithm to enumerate all of the possibilities. The expected time to find a solution is proportional to the difficulty\u200a\u2014\u200athe higher the difficulty, the harder it becomes to find the nonce, and so the harder it is to validate the block, which in turn increases the time it takes to validate a new block. So, by adjusting the difficulty of a block, the protocol can adjust how long it takes to validate a block.If, on the other hand, validation time is getting slower, the protocol decreases the difficulty. In this way, the validation time self-adjusts to maintain a constant rate\u200a\u2014\u200aon average, one block every 15 seconds.Transaction ExecutionWe\u2019ve come to one of the most complex parts of the Ethereum protocol: the execution of a transaction. Say you send a transaction off into the Ethereum network to be processed. What happens to transition the state of Ethereum to include your transaction?First, all transactions must meet an initial set of requirements in order to be executed. These include:The transaction must be a properly formatted RLP. \u201cRLP\u201d stands for \u201cRecursive Length Prefix\u201d and is a data format used to encode nested arrays of binary data. RLP is the format Ethereum uses to serialize objects.Valid transaction signature.Valid transaction nonce. Recall that the nonce of an account is the count of transactions sent from that account. To be valid, a transaction nonce must be equal to the sender account\u2019s nonce.The transaction\u2019s gas limit must be equal to or greater than the intrinsic gas used by the transaction. The intrinsic gas includes:a predefined cost of 21,000 gas for executing the transactiona gas fee for data sent with the transaction (4 gas for every byte of data or code that equals zero, and 68 gas for every non-zero byte of data or code)if the transaction is a contract-creating transaction, an additional 32,000 gasThe sender\u2019s account balance must have enough Ether to cover the \u201cupfront\u201d gas costs that the sender must pay. The calculation for the upfront gas cost is simple: First, the transaction\u2019s gas limit is multiplied by the transaction\u2019s gas price to determine the maximum gas cost. Then, this maximum cost is added to the total value being transferred from the sender to the recipient.If the transaction meets all of the above requirements for validity, then we move onto the next step.First, we deduct the upfront cost of execution from the sender\u2019s balance, and increase the nonce of the sender\u2019s account by 1 to account for the current transaction. At this point, we can calculate the gas remaining as the total gas limit for the transaction minus the intrinsic gas used.Next, the transaction starts executing. Throughout the execution of a transaction, Ethereum keeps track of the \u201csubstate.\u201d This substate is a way to record information accrued during the transaction that will be needed immediately after the transaction completes. Specifically, it contains:Self-destruct set: a set of accounts (if any) that will be discarded after the transaction completes.Log series: archived and indexable checkpoints of the virtual machine\u2019s code execution.Refund balance: the amount to be refunded to the sender account after the transaction. Remember how we mentioned that storage in Ethereum costs money, and that a sender is refunded for clearing up storage? Ethereum keeps track of this using a refund counter. The refund counter starts at zero and increments every time the contract deletes something in storage.Next, the various computations required by the transaction are processed.Once all the steps required by the transaction have been processed, and assuming there is no invalid state, the state is finalized by determining the amount of unused gas to be refunded to the sender. In addition to the unused gas, the sender is also refunded some allowance from the \u201crefund balance\u201d that we described above.Once the sender is refunded:the Ether for the gas is given to the minerthe gas used by the transaction is added to the block gas counter (which keeps track of the total gas used by all transactions in the block, and is useful when validating a block)all accounts in the self-destruct set (if any) are deletedFinally, we\u2019re left with the new state and a set of the logs created by the transaction.Now that we\u2019ve covered the basics of transaction execution, let\u2019s look at some of the differences between contract-creating transactions and message calls.Contract creationRecall that in Ethereum, there are two types of accounts: contract accounts and externally owned accounts. When we say a transaction is \u201ccontract-creating,\u201d we mean that the purpose of the transaction is to create a new contract account.In order to create a new contract account, we first declare the address of the new account using a special formula. Then we initialize the new account by:Setting the nonce to zeroIf the sender sent some amount of Ether as value with the transaction, setting the account balance to that valueDeducting the value added to this new account\u2019s balance from the sender\u2019s balanceSetting the storage as emptySetting the contract\u2019s codeHash as the hash of an empty stringOnce we initialize the account, we can actually create the account, using the init code sent with the transaction (see the \u201cTransaction and messages\u201d section for a refresher on the init code). What happens during the execution of this init code is varied. Depending on the constructor of the contract, it might update the account\u2019s storage, create other contract accounts, make other message calls, etc.As the code to initialize a contract is executed, it uses gas. The transaction is not allowed to use up more gas than the remaining gas. If it does, the execution will hit an out-of-gas (OOG) exception and exit. If the transaction exits due to an out-of-gas exception, then the state is reverted to the point immediately prior to transaction. The sender is not refunded the gas that was spent before running out.Boo hoo.However, if the sender sent any Ether value with the transaction, the Ether value will be refunded even if the contract creation fails. Phew!If the initialization code executes successfully, a final contract-creation cost is paid. This is a storage cost, and is proportional to the size of the created contract\u2019s code (again, no free lunch!) If there\u2019s not enough gas remaining to pay this final cost, then the transaction again declares an out-of-gas exception and aborts.If all goes well and we make it this far without exceptions, then any remaining unused gas is refunded to the original sender of the transaction, and the altered state is now allowed to persist!Hooray!Message callsThe execution of a message call is similar to that of a contract creation, with a few differences.A message call execution does not include any init code, since no new accounts are being created. However, it can contain input data, if this data was provided by the transaction sender. Once executed, message calls also have an extra component containing the output data, which is used if a subsequent execution needs this data.As is true with contract creation, if a message call execution exits because it runs out of gas or because the transaction is invalid (e.g. stack overflow, invalid jump destination, or invalid instruction), none of the gas used is refunded to the original caller. Instead, all of the remaining unused gas is consumed, and the state is reset to the point immediately prior to balance transfer.Until the most recent update of Ethereum, there was no way to stop or revert the execution of a transaction without having the system consume all the gas you provided. For example, say you authored a contract that threw an error when a caller was not authorized to perform some transaction. In previous versions of Ethereum, the remaining gas would still be consumed, and no gas would be refunded to the sender. But the Byzantium update includes a new \u201crevert\u201d code that allows a contract to stop execution and revert state changes, without consuming the remaining gas, and with the ability to return a reason for the failed transaction. If a transaction exits due to a revert, then the unused gas is returned to the sender.Execution modelSo far, we\u2019ve learned about the series of steps that have to happen for a transaction to execute from start to finish. Now, we\u2019ll look at how the transaction actually executes within the VM.The part of the protocol that actually handles processing the transactions is Ethereum\u2019s own virtual machine, known as the Ethereum Virtual Machine (EVM).The EVM is a Turing complete virtual machine, as defined earlier. The only limitation the EVM has that a typical Turing complete machine does not is that the EVM is intrinsically bound by gas. Thus, the total amount of computation that can be done is intrinsically limited by the amount of gas provided.Source: CMUMoreover, the EVM has a stack-based architecture. A stack machine is a computer that uses a last-in, first-out stack to hold temporary values.The size of each stack item in the EVM is 256-bit, and the stack has a maximum size of 1024.The EVM has memory, where items are stored as word-addressed byte arrays. Memory is volatile, meaning it is not permanent.The EVM also has storage. Unlike memory, storage is non-volatile and is maintained as part of the system state. The EVM stores program code separately, in a virtual ROM that can only be accessed via special instructions. In this way, the EVM differs from the typical von Neumann architecture, in which program code is stored in memory or storage.The EVM also has its own language: \u201cEVM bytecode.\u201d When a programmer like you or me writes smart contracts that operate on Ethereum, we typically write code in a higher-level language such as Solidity. We can then compile that down to EVM bytecode that the EVM can understand.Okay, now on to execution.Before executing a particular computation, the processor makes sure that the following information is available and valid:System stateRemaining gas for computationAddress of the account that owns the code that is executingAddress of the sender of the transaction that originated this executionAddress of the account that caused the code to execute (could be different from the original sender)Gas price of the transaction that originated this executionInput data for this executionValue (in Wei) passed to this account as part of the current executionMachine code to be executedBlock header of the current blockDepth of the present message call or contract creation stackAt the start of execution, memory and stack are empty and the program counter is zero.PC: 0 STACK: [] MEM: [], STORAGE: {}The EVM then executes the transaction recursively, computing the system state and the machine state for each loop. The system state is simply Ethereum\u2019s global state. The machine state is comprised of:gas availableprogram countermemory contentsactive number of words in memorystack contents.Stack items are added or removed from the leftmost portion of the series.On each cycle, the appropriate gas amount is reduced from the remaining gas, and the program counter increments.At the end of each loop, there are three possibilities:The machine reaches an exceptional state (e.g. insufficient gas, invalid instructions, insufficient stack items, stack items would overflow above 1024, invalid JUMP/JUMPI destination, etc.) and so must be halted, with any changes discardedThe sequence continues to process into the next loopThe machine reaches a controlled halt (the end of the execution process)Assuming the execution doesn\u2019t hit an exceptional state and reaches a \u201ccontrolled\u201d or normal halt, the machine generates the resultant state, the remaining gas after this execution, the accrued substate, and the resultant output.Phew. We got through one of the most complex parts of Ethereum. Even if you didn\u2019t fully comprehend this part, that\u2019s okay. You don\u2019t really need to understand the nitty gritty execution details unless you\u2019re working at a very deep level.How a block gets finalizedFinally, let\u2019s look at how a block of many transactions gets finalized.When we say \u201cfinalized,\u201d it can mean two different things, depending on whether the block is new or existing. If it\u2019s a new block, we\u2019re referring to the process required for mining this block. If it\u2019s an existing block, then we\u2019re talking about the process of validating the block. In either case, there are four requirements for a block to be \u201cfinalized\u201d:\u00a01) Validate (or, if mining, determine) ommers\u00a0Each ommer block within the block header must be a valid header and be within the sixth generation of the present block.\u00a02) Validate (or, if mining, determine) transactionsThe gasUsed number on the block must be equal to the cumulative gas used by the transactions listed in the block. (Recall that when executing a transaction, we keep track of the block gas counter, which keeps track of the total gas used by all transactions in the block).\u00a03) Apply rewards (only if mining)The beneficiary address is awarded 5 Ether for mining the block. (Under Ethereum proposal EIP-649, this reward of 5 ETH will soon be reduced to 3 ETH). Additionally, for each ommer, the current block\u2019s beneficiary is awarded an additional 1/32 of the current block reward. Lastly, the beneficiary of the ommer block(s) also gets awarded a certain amount (there\u2019s a special formula for how this is calculated).\u00a0\u00a04) Verify (or, if mining, compute a valid) state and nonceEnsure that all transactions and resultant state changes are applied, and then define the new block as the state after the block reward has been applied to the final transaction\u2019s resultant state. Verification occurs by checking this final state against the state trie stored in the header.Mining proof of\u00a0workThe \u201cBlocks\u201d section briefly addressed the concept of block difficulty. The algorithm that gives meaning to block difficulty is called Proof of Work (PoW).Ethereum\u2019s proof-of-work algorithm is called \u201cEthash\u201d (previously known as Dagger-Hashimoto).The algorithm is formally defined as:where m is the mixHash, n is the nonce, Hn is the new block\u2019s header (excluding the nonce and mixHash components, which have to be computed), Hn is the nonce of the block header, and d is the DAG, which is a large data set.In the \u201cBlocks\u201d section, we talked about the various items that exist in a block header. Two of those components were called the mixHash and the nonce. As you may recall:mixHash is a hash that, when combined with the nonce, proves that this block has carried out enough computationnonce is a hash that, when combined with the mixHash, proves that this block has carried out enough computationThe PoW function is used to evaluate these two items.How exactly the mixHash and nonce are calculated using the PoW function is somewhat complex, and something we can delve deeper into in a separate post. But at a high level, it works like this:A \u201cseed\u201d is calculated for each block. This seed is different for every \u201cepoch,\u201d where each epoch is 30,000 blocks long. For the first epoch, the seed is the hash of a series of 32 bytes of zeros. For every subsequent epoch, it is the hash of the previous seed hash. Using this seed, a node can calculate a pseudo-random \u201ccache.\u201dThis cache is incredibly useful because it enables the concept of \u201clight nodes,\u201d which we discussed previously in this post. The purpose of light nodes is to afford certain nodes the ability to efficiently verify a transaction without the burden of storing the entire blockchain dataset. A light node can verify the validity of a transaction based solely on this cache, because the cache can regenerate the specific block it needs to verify.Using the cache, a node can generate the DAG \u201cdataset,\u201d where each item in the dataset depends on a small number of pseudo-randomly-selected items from the cache. In order to be a miner, you must generate this full dataset; all full clients and miners store this dataset, and the dataset grows linearly with time.Miners can then take random slices of the dataset and put them through a mathematical function to hash them together into a \u201cmixHash.\u201d A miner will repeatedly generate a mixHash until the output is below the desired target nonce. When the output meets this requirement, this nonce is considered valid and the block can be added to the chain.Mining as a security mechanism\u00a0Overall, the purpose of the PoW is to prove, in a cryptographically secure way, that a particular amount of computation has been expended to generate some output (i.e. the nonce). This is because there is no better way to find a nonce that is below the required threshold other than to enumerate all the possibilities. The outputs of repeatedly applying the hash function have a uniform distribution, and so we can be assured that, on average, the time needed to find such a nonce depends on the difficulty threshold. The higher the difficulty, the longer it takes to solve for the nonce. In this way, the PoW algorithm gives meaning to the concept of difficulty, which is used to enforce blockchain security.What do we mean by blockchain security? It\u2019s simple: we want to create a blockchain that EVERYONE trusts. As we discussed previously in this post, if more than one chain existed, users would lose trust, because they would be unable to reasonably determine which chain was the \u201cvalid\u201d chain. In order for a group of users to accept the underlying state that is stored on a blockchain, we need a single canonical blockchain that a group of people believes in.This is exactly what the PoW algorithm does: it ensures that a particular blockchain will remain canonical into the future, making it incredibly difficult for an attacker to create new blocks that overwrite a certain part of history (e.g. by erasing transactions or creating fake transactions) or maintain a fork. To have their block validated first, an attacker would need to consistently solve for the nonce faster than anyone else in the network, such that the network believes their chain is the heaviest chain (based on the principles of the GHOST protocol we mentioned earlier). This would be impossible unless the attacker had more than half of the network mining power, a scenario known as the majority 51% attack.Mining as a wealth distribution mechanismBeyond providing a secure blockchain, PoW is also a way to distribute wealth to those who expend their computation for providing this security. Recall that a miner receives a reward for mining a block, including:a static block reward of 5 ether for the \u201cwinning\u2019\u201d block (soon to be changed to 3 ether)the cost of gas expended within the block by the transactions included in the blockan extra reward for including ommers as part of the blockIn order to ensure that the use of the PoW consensus mechanism for security and wealth distribution is sustainable in the long run, Ethereum strives to instill these two properties:Make it accessible to as many people as possible. In other words, people shouldn\u2019t need specialized or uncommon hardware to run the algorithm. The purpose of this is to make the wealth distribution model as open as possible so that anyone can provide any amount of compute power in return for Ether.Reduce the possibility for any single node (or small set) to make a disproportionate amount of profit. Any node that can make a disproportionate amount of profit means that the node has a large influence on determining the canonical blockchain. This is troublesome because it reduces network security.In the Bitcoin blockchain network, one problem that arises in relation to the above two properties is that the PoW algorithm is a SHA256 hash function. The weakness with this type of function is that it can be solved much more efficiently using specialized hardware, also known as ASICs.In order to mitigate this issue, Ethereum has chosen to make its PoW algorithm (Ethhash) sequentially memory-hard. This means that the algorithm is engineered so that calculating the nonce requires a lot of memory AND bandwidth. The large memory requirements make it hard for a computer to use its memory in parallel to discover multiple nonces simultaneously, and the high bandwidth requirements make it difficult for even a super-fast computer to discover multiple nonce simultaneously. This reduces the risk of centralization and creates a more level playing field for the nodes that are doing the verification.One thing to note is that Ethereum is transitioning from a PoW consensus mechanism to something called \u201cproof-of-stake\u201d. This is a beastly topic of its own that we can hopefully explore in a future post. \u263a\ufe0fConclusion\u2026Phew! You made it to the end. I hope?There\u2019s a lot to digest in this post, I know. If it takes you multiple reads to fully understand what\u2019s going on, that\u2019s totally fine. I personally read the Ethereum yellow paper, white paper, and various parts of the code base many times before grokking what was going on.Nonetheless, I hope you found this overview helpful. If you find any errors or mistakes, I\u2019d love for you to write a private note or post it directly in the comments. I look at all of \u2019em, I promise\u00a0;)And remember, I\u2019m human (yep, it\u2019s true) and I make mistakes. I took the time to write this post for the benefit of the community, for free. So please be constructive in your feedback, without unnecessary bashing. \u263a\ufe0f", "responses": "312"}, {"title": "NEO versus Ethereum: Why NEO might be 2018\u2019s strongest cryptocurrency", "author_name": "Noam Levenson", "author_profile_link": "https://hackernoon.com/@noamlevenson", "link": "https://hackernoon.com/neo-versus-ethereum-why-neo-might-be-2018s-strongest-cryptocurrency-79956138bea3?source=search_post---------1", "post_date": "Dec 6, 2017", "readtime": "25 min read", "upvotes": "91K", "content": "NEO versus Ethereum: Why NEO might be 2018\u2019s strongest cryptocurrencyNoam LevensonBlockedUnblockFollowFollowingDec 6, 2017NEO is a platform with a purpose. Can it compete with Ethereum? Or better yet, does it even need to?Why Read This\u00a0Article?NEO and Ethereum\u200a\u2014\u200awhich pill will you take? Sorry, couldn\u2019t help myself. We care about this debate because we\u2019re investors. From a developer\u2019s perspective, functionality is the most important. There is no brand loyalty in blockchain yet. So if a platform can do something better than its competitors, it will win over developers. So which one does it better?This article is long because I have chewed through all the information I could find about NEO and Ethereum and digested it for you. There are lots of articles summarizing the \u201cdifferences\u201d between Ethereum and NEO, but they do the debate little justice. They skim over things, don\u2019t explore them well, explore only one aspect, or aren\u2019t holistic in their analysis and don\u2019t explain why the differences even matter and what their relevance to the real world is. I was frustrated by the lack of a comprehensive article. This article is my response.I will admit that I explore NEO more in-depth than Ethereum. This is because so much information is widely available for Ethereum. With NEO, there is much less. As such, I focus on explaining NEO and then comparing that explanation to Ethereum\u2019s capability.So bear with me, grab yourself an espresso and lock yourself in that room you \u201cdo work in.\u201d This will be well worth your time. I also won\u2019t blame you if you just read the TLDR\u200a\u2014\u200aToo Lazy, Didn\u2019t Read\u200a\u2014\u200aunder the articles.Let\u2019s beginIf Ethereum is Goliath, NEO is David. If Ethereum is Brad Pitt, NEO is Brad Pitt\u2019s cousin, Zach Pitt\u2014younger, better dressed, and more talented\u200a\u2014\u200abut right now relegated to serving cocktails to Brad and his friends while he acts on the side. Ethereum did it first. It was revolutionary and exciting and took the crypto world by storm. Web 3.0. Today almost every ICO is built on Ethereum\u2019s ERC20 token platform and Vitalik Buterin is one of our time\u2019s greatest minds. Yet if we\u2019ve learned anything from the fact that Alibaba is closing in on Amazon\u2019s market cap and WeChat dominates China\u2019s social media scene, it\u2019s that China plays by their own rules. The Land of the Red Dragon uses their own technology, their own networks, and cares little for what the U.S. is doing. The question is, can NEO compete with Ethereum, and does it even need to?Ultimately, NEO and Ethereum are aiming for similar roles in the crypto community. Both want to be platforms for the new internet: for DApps (Decentralized Applications), ICOs (Initial Coin Offerings), and smart contracts.Overview of Ethereum and\u00a0NeoWhile both NEO and Ethereum have generalized blockchains that provide a toolbox for would be developers, their objectives differ. I would summarize each platform\u2019s objectives as such:Ethereum\u2019s goal is to create a platform for the development of DApps in order to create a \u201cmore globally accessible, more free, and more trustworthy Internet:\u201d an internet 3.0.NEO is a blockchain project \u201cthat utilizes blockchain technology and digital identity to digitize assets, to automate the management of digital assets using smart contracts, and to realize a \u201csmart economy\u201d with a distributed network.\u201dThat\u2019s a mouthful. Let\u2019s breakdown these objectives to fully understand the projects. It\u2019s important to understand that both platforms share many of the same capabilities, but the distinction in their branded objectives is very important.Ethereum: Ethereum\u2019s goal is to be the platform for DApps and they are largely accomplishing this. They own the DApp market right now. Their roadmap is all about giving users and developers more control and more options in developing their applications.NEO: NEO is working towards developing a product for the future. It not only rebranded from Antshares to NEO in June of 2017, but they refocused their marketing as well\u200a\u2014\u200awith enormous success. Neo\u2019s objective, while ultimately utilizing many of the same technologies as Ethereum, is to be the platform for a new smart economy.In short: Ethereum is developing in response to new demands. NEO is developing their platform in anticipation of future demands.What is a Smart\u00a0Economy?The biggest difference between NEO and Ethereum is NEO\u2019s focus on a smart economy. If we want to fully understand NEO, we need to understand why this distinction is important.A smart economy will feature digitized physical assets. All of these newly digitized assets will have proof of ownership in the blockchain. These assets can be sold, traded, and leveraged through smart contracts. Their ownership can be protected and validated through the decentralized model of the blockchain. We\u2019ve already seen iterations of this: from proposed supply chain overhaul to DAOs (decentralized autonomous organizations\u200a\u2014\u200aessentially decentralized companies without a leader). I offered some real world examples of this economy in this article. Now while Ethereum will likely support many of the same capabilities that NEO has, the distinction between Ethereum and NEO\u2019s objectives is what we care about.The distinction is important because a smart economy will still be under a government and under governmental regulation. I don\u2019t trust the government as much as your next libertarian; I\u2019ve read 1984 too many times. But the fact remains that governments aren\u2019t going anywhere. Thus, for a platform to service this \u201csmart economy,\u201d that platform needs to put specific thought and intention into how it will accommodate governmental regulation. So while Ethereum might offer the similar blockchain capabilities, the fact that NEO is developing FOR THIS PURPOSE is crucial.TLDR: A smart economy is in our future. To accommodate the needs of this smart economy, the platform will need to be specifically designed for this new economy.What is NEO doing to prepare itself for the smart\u00a0economy?NEO places particular emphasis on staying regulatory compliant.To do this, they need:Governments don\u2019t love these\u00a0guysDigital IdentityAnonymity is great. I think privacy should be at the forefront of today\u2019s technological developments and discussions. But if companies and governments are operating on the blockchain, digitizing their assets, and issuing smart contracts, all under the watchful eye of the government, they can\u2019t have anonymity. For a platform to be regulatory compliant, digital identity\u200a\u2014\u200aa verifiable identity in digital form\u200a\u2014\u200ais a necessary evil.Today, digital identity is based on a system called the PKI (Public Key Infrastructure) X.509 standard. This probably means about as much as it does to you as it does to me. It just means that there is an international agreed upon standard for what constitutes a digital identity. NEO\u2019s plan is to issue digital identities in accordance to this standard and then secure them using the blockchain. Bookkeepers (read about them later) will have digital identities and real names. Because of this, judicial action can be taken against them if ever need be. This is imperative when registering financial assets on the network and staying regulatory compliant.There could also be businesses and projects that will only transact with people who have a digital identity, for regulatory reasons. NEO enables that possibility.NEO is already working in a strategic partnership with THEKEY\u200a\u2014\u200aa project being developed on NEO\u2019s platform that will assist with providing digital identification.What about Ethereum: Ethereum requires other DApps to develop digital identities which can then be secured on the Ethereum blockchain. This isn\u2019t so unlike how it will work with NEO\u200a\u2014\u200ahowever NEO has made it clear, through its plan to incorporate digital identity with its bookkeeper nodes, that integration of digital identity is of central importance to the NEO ecosystem.TLDR: Governments don\u2019t like anonymity. Industries don\u2019t like pissing off the government. If NEO wants industrial adoption, it needs to have digital identities.Digital AssetsA future digital\u00a0asset?If you want a smart economy based on smart contracts, you need to be able to leverage and exchange assets beyond currency. We need to be able to digitize assets like house, property, and car ownership; gold, diamonds, and other precious elements; computers, clothes, and food; even those baseball cards your mom keeps begging you to throw away. Smart contracts become so much more powerful when we have the ability to digitize all of these assets.What about Ethereum: Very similar to the digital identity blurb. Ethereum absolutely can secure digital assets, but they won\u2019t necessarily be regulatory compliant. NEO is ensuring that issued digital asset certificates will be compliant.TDLR: Just read itNEO\u2019s complex\u00a0networkThe economy is complex; it has so many interconnected pieces. NEO\u2019s platform is complex, with partnerships galore. Fully researching and understanding this is difficult. But I did it, so you don\u2019t have to! Refer back to this visual to have a solid picture of how this network interacts.Even though this looks like the deranged drawings of a conspiracist, it will make sense as you reference it while learning about NEO\u2019s\u00a0networkOnChainNEO\u2019s founders Da HongFei and Erik Zhang founded a company called OnChain. Understanding OnChain is critical to understanding NEO. They\u2019re not the same company, but their interests align and they have a partnership together. OnChain\u2019s system, known as DNA (Decentralized Network Architecture) aims to work with Chinese businesses and government. NEO acts as the foundation of DNA. If OnChain can integrate with Chinese businesses and government, that will greatly spur adoption of NEO.Ultimately, DNA develops public and private blockchains for businesses. These blockchains then link up to NEO to join the decentralized economy. Businesses then have all the benefits of both private and public blockchains. Think of NEO as providing the public blockchains and OnChain\u2019s DNA providing the private blockchains. Then, they can link up and get the best of both worlds.OnChain also has several projects and partnerships and newsworthy mentions that all contribute to the DNA ecosystem:Established in 2014, this is not a fresh-off-the-shelf companyFirst Chinese blockchain company to join Hyperledger\u200a\u2014\u200aa collaboration of projects that work towards integrating blockchain with established businesses.Legal Chain\u200a\u2014\u200aworks with Microsoft China in digitizing and securing signatures via blockchain technology.Strategic partner of Microsoft China on multiple projectsWorked with the Japanese Ministry of Economy, Trade and IndustryVoted as KPMG\u2019s top 50 Fintech Company in ChinaPartnership with Alibaba to provide an email certification service for Ali CloudInvestment from Fosun Group\u2014China\u2019s largest private conglomerate\u200a\u2014\u200ato integrate OnChain across their businesses.Collaboration with Chinese regional government\u200a\u2014\u200ausing OnChain to develop public services and digital identityOnChain\u2019s recent development was of the ICO Ontology. Ontology uses the same architecture as NEO but ultimately works with businesses in creating a private, encrypted data network. Essentially, this is important when we have information that we need securing, but we also need it to be private. This will enable people to bring this information in a secure manner to blockchains.References on OnChain\u2019s roadmapHonestly, I don\u2019t understand why NEO doesn\u2019t advertise their collaboration with OnChain more. NEO in itself is solid, offering several potential benefits over Ethereum. But combined with OnChain, NEO truly has the potential to implement itself as THE smart economy platform of the East.The Ethereum Comparison: Ethereum\u2019s equivalent is the Enterprise Ethereum Alliance, an open source blockchain initiative dedicated to linking Ethereum with the business world. Their list of partnerships is robust and impressive\u200a\u2014\u200ano surprise for those familiar with Ethereum. Included among their members are: BP, HP, Toyota, MasterCard, Microsoft, and Intel, among many others.TLDR: OnChain is a company partnered with NEO. They have extensive experience and many accolades in bringing blockchain to businesses. They work with companies and governments in the East. They are a huge component to NEO\u2019s potential.NEOX:NEOX is NEO\u2019s version of atomic swaps (directly swapping tokens without any exchange) and cross-chain integration. Think Ark Ecosystem. This will enable people to swap crypto assets and transact across different blockchains. It also allows smart contracts to interact across chains.NEOX is important because it allows collaboration between the blockchains (both private and public) created by OnChain and by NEO\u2019s public blockchain. As more components of the Smart Economy develop, NEOX will link them all together.Ethereum Comparison: Ethereum has the ability to do atomic swaps, but has only completed this once\u200a\u2014\u200athis isn\u2019t to put down Ethereum; NEO has never completed one. However, Ethereum will need an outside application to accommodate large scale cross-chain integration.Not quite the City of Zion we\u2019re talking\u00a0about\u2026City of\u00a0Zion:City of Zion (CoZ) is an independent, open source community of developers, translators, and designers who work towards the betterment of NEO. They have received funding from NEO to help incentivize project development. The community has contributed considerably to NEO. They have developed the NEON wallet, created a NEO block scanner, translated documents for NEO, and developed the NEX platform (see below). They recently received NEO funding to award $270,000 to 10 winners as part of their DApp competition. It is incredibly advantageous to have a network of support such as CoZ.Ethereum Comparison: There isn\u2019t really a good comparison for this on the Ethereum network.NEX:Nex is an upcoming ICO developed by City of Zion that offers a platform for the creation of payment solutions and decentralized exchanges on NEO. It links to NEO with NEOX.Because of differences with NEO in the token model, account balances, and way smart contract interact\u200a\u2014\u200ain comparison to Ethereum\u200a\u2014\u200aNEO needed a solution to be able to effectively house decentralized exchanges. NEX offers that solution.Ethereum Comparison: Already ERC20 tokens are easy to transact with on decentralized exchanges.ProjectICO:A turnkey, all-in-one ICO company that helps blockchain companies develop: from initial idea to ICO. They recently decided to move from Ethereum to NEO. They have an interesting Reddit AMA on their reasons for switching.Ethereum Comparison: TokenHub is a similar project developing on Ethereum.Microsoft China:NEO is currently hosting a developer competition in partnership with Microsoft China with $490,000 as prize money.Ethereum Comparison: Ethereum is incredibly well connected with established corporations. NEO is playing catchup.DApps and\u00a0ICOs:The bread and butter of platforms; until now, NEO has only had one ICO (Red Pulse) and one DApp (AdEx). However, with several planned in the near future and with an upgrade last month which will enable NEO smart contracts to interact with website interfaces, I think this is only the beginning for NEO.Ethereum Comparison: Ethereum hands down beats NEO in this area. Ethereum is the go-to platform for ICOs and DApps.Ecosystem RecapWe hopefully have a strong understanding of the differences in the goals of Ethereum and NEO, as well as a good overview of NEO\u2019s network and the network\u2019s advantages in the smart economy. It\u2019s important to understand this network for NEO because NEO is more than just a public blockchain, it is a piece in the larger picture. When NEO\u2019s public blockchain can link up with OnChain\u2019s private and business oriented blockchains and ultimately with all other DApps on it\u2019s platform, it could truly become a smart economy.The biggest differences between Ethereum and\u00a0NEOEthereum\u2019s energy consumption could power 1,025,438 American homes for a year.\u200a\u2014\u200aSource\u00a0\u2014ProtocolEthereum uses the same protocol as Bitcoin\u200a\u2014\u200aProof of Work (PoW). With Proof of Work, computers on the network compete to solve mathematical formulas and win the right to confirm transactions into the blockchain, and thus, secure the network. The two major drawbacks to the PoW protocol is the danger of a 51% attack and the massive energy consumption required for network security. For these reasons, I think that PoW will soon be an outdated system, as blockchain transitions to a new protocol called Proof of Stake (PoS).Proof of Stake works similarly to PoW except that instead of computers validating the network and receiving rewards equivalent to their relative computing power, PoS uses token holders. Those who hold tokens can \u201cstake\u201d their tokens (staking means to temporarily place the tokens in a locked smart contract\u200a\u2014\u200auntil staking is over) and in exchange, confirm transactions and receive rewards based on the relative number of tokens held. In PoW, if you operate 5% of the total computing power of the network, you can expect to get 5% of the block rewards. In PoS, if you own 5% of tokens, you can also expect to receive 5% of block rewards.PoS offers a solution to the issues plaguing PoW\u200a\u2014\u200amainly it takes virtually no energy to run PoS\u200a\u2014\u200awithout compromising the security. I would argue that it actually improves security. With Ethereum, and all other PoW protocols, the difficulty algorithm (how hard it is to solve the mathematical formula) must constantly be updated to account for better computer hardware and more powerful mining groups. With PoS there is no need to do this. With Ethereum, you could conceivably purchase enough computing hardware to achieve a 51% attack; even after comprising the network, you would still have all of that hardware and could potentially use it to attack other PoW platforms. With PoS, because you must stake your coins, any malicious behavior results in the loss of all staked coins. So if you bought 51% of all tokens, you would immediately lose your substantial investment. In addition, the costs of purchasing 51% of the network tokens are equal for everyone. The costs of obtaining 51% of computer power\u200a\u2014\u200adue to discounts for mass computer purchases and countries with extremely cheap electricity\u200a\u2014\u200aare not.Byzantine Fault Tolerance attempts to solve the Byzantine General\u2019s ProblemNEO uses a protocol called dBFT (Delegated Byzantine Fault Tolerance) sounds like a term you\u2019d see on your AP History Test. The simplest explanation of Byzantine Fault Tolerance is the issue with how to get everyone on the network to be honest and work together\u200a\u2014\u200abecause one bad apple could ruin everything. NEO\u2019s dBFT is a modification of the classic PoS protocol, with some significant advantages and one primary disadvantage.I imagine dBFT as working similar to how the U.S. Senate works (and if that analogy made you want to just give up on Neo entirely, I understand, but hold on\u2026keep reading). If every person in America\u200a\u2014\u200aall 323.1 million\u2014was allowed to directly participate in the governmental decision making process, it would be catastrophic. It would be brutally slow as millions competed for the microphone, all shouting their opinion and arguing with each other. Making decisions would also be agonizingly slow. So instead, everyone in the country gets a vote. And with this vote, they can elect their representatives, someone to speak for them. This system directly reflects NEO\u2019s governance. Instead of everyone participating in the validating process\u200a\u2014\u200awhich can be incredibly limiting in terms of transaction speed\u200a\u2014\u200athose who hold NEO tokens can vote for delegates. These delegates (called bookkeepers) maintain the network for everyone. Thus, NEO can run faster, more efficiently, and with quicker and more finite decisions, and you can stay home, drink Bud Light, and watch the Patriots game with your computer in sleep mode.Remember too that these bookkeepers will have their digital identity known, making NEO much more compliant with national regulations.The disadvantage with this system is a lack of decentralization. In its purest sense, instead of thousands of validators being scattered all across the world, governance is concentrated in a few dozen validators. The majority of these nodes are currently operated by the NEO team. However, as of Quarter 1, 2018, NEO will hold less than 2/3 and will continue to hold fewer as time progresses. Regardless, NEO will never be as decentralized as other pure PoS platforms.I would however argue that Ethereum is also not as decentralized as you might think. While the PoW protocol is decentralized, you can count the number of core developer\u2019s for Ethereum on one hand. In addition, while I trust Vitalik Buterin, he does have enormous power and influence over the direction of Ethereum.Ethereum will transition to a PoS protocol in the future. They already have begun the process and the mining difficulty of confirming new blocks will increase exponentially until it is impossible to mine anymore and everyone must transition to the PoS protocol. This will happen but it is likely more than a year out.TLDR: Ethereum uses a Proof of Work protocol and will evolve into Proof of Stake. NEO uses a Delegated Byzantine Fault Tolerance (dBFT) protocol which is a modification of the standard proof of stake protocol.Transaction Speed:Because NEO doesn\u2019t run on PoW and has a more streamlined PoS protocol, NEO can process transactions far more quickly than Ethereum. Now when we compare these, there are both theoretical and practical speeds. Theoretical transaction speeds are the absolute maximum speed mathematically possible for the network. For NEO, this number is 10,000tps (transactions/second). Ethereum can do 30tps. In practicality, because of real world inconsistencies and difficulties, NEO can do 1,000tps in comparison to Ethereum\u2019s 15tps. As protocols improve it is possible that both platforms will approach their theoretical speed.This is an enormous difference and a massive advantage for NEO. NEO\u2019s transaction speeds could conceivably accommodate the kind of smart economy they\u2019re envisioning; Ethereum\u2019s can not. Now in exchange for this speed, NEO is not as decentralized as Ethereum. In addition, it\u2019s important to recognize that Vitalik and Ethereum are well aware of this limitation. Solutions such as Raiden and sharding (two fascinating technologies but far beyond the scope of this article) are on the roadmap for Ethereum and could drastically improve Ethereum\u2019s transaction speed.TLDR: Ethereum can transact at 15tps with a maximum of 30tps. NEO can transact at 1,000tps with a maximum of 10,000tps. Ethereum has plans and solutions to scale to close this gap.Forking and\u00a0scaling:Ethereum forks to update its software, just like Bitcoin. I describe this here. Forks aren\u2019t necessarily bad, but they certainly can be. Look at Ethereum\u2019s DAO fork for an example of this. After millions were stolen from an Ethereum smart contract, Ethereum forked to refund the money to the original holders. Whether or not this decision was correct, it divided the community and Ethereum Classic was created alongside Ethereum.Forks happen because there is no finality in the consensus mechanism of Ethereum. Multiple chains in the blockchain can be created at once\u200a\u2014\u200aultimately, both are valid chains and can continued to be mined on. Forks happen constantly but are usually resolved when the chain with the most computer power is chosen as legitimate. With Ethereum, it\u2019s always recommended that when you place a transaction, you wait until a few blocks have been mined on top of yours before considering the transaction permanent.NEO has finality. This is because the bookkeepers must reach a 66% consensus for the transaction to be placed into the blockchain. Here is an analogy to understand this. Imagine a first grade class. Timmy asks how much chocolate milk costs. Cynthia has no concept of price (she\u2019s in first grade for God\u2019s sake) and shouts $15! A few students walk over to her in agreement. Bobby\u2019s a chocolate milk aficionado\u200a\u2014\u200ahe knows his milk. He says $1.25. Most of the room walks over to him. He has a majority. Now assuming Cynthia\u2019s group realizes their flaw and joins Bobby\u2019s group, then the group reaches consensus. But if Cynthia is having a particularly stubborn day, she could keep on with her decision\u200a\u2014\u200aa fork. It might not be the right answer, but she still has a valid answer. This is how Ethereum works.Only in Israel do they have chocolate milk in a\u00a0bag\u2026NEO works like this. Imagine the same scenario. Timmy again asks how much chocolate milk costs. First Cynthia speaks up: \u201c$15!\u201d A few murmur in support, but it\u2019s clearly not 66% of the class so her idea is discarded. Next Bobby says \u201c$1.25.\u201d 66% of the class support his claim and thus, his idea is final. With NEO, the bookkeepers each propose the correct state of the next block. When 66% of them support the proposition, the block is finalized.The implications of this are huge. Finality is incredibly important for the type of economy NEO hopes to support. The financial industry and other complicated, fast moving markets (stock markets for example), can\u2019t operate on a system without finality. They need to know that when their information is placed into the blockchain, it is there for good. They also need the assurance that their blockchain won\u2019t suddenly become irrelevant because of a fork.TLDR: Ethereum can fork; NEO can\u2019t\u200a\u2014\u200athis is important for adoption by our real world economy.Decoupling of GAS and\u00a0NEOThis may very well be NEO\u2019s most ingenious characteristic. The native token of Ethereum is ether. The gas needed to run the Ethereum network (execute contracts, conduct transactions, etc.) is actually just small units of ether. There is no separation between ether and gas.However, NEO decoupled itself from the token needed to run the network: GAS. The NEO token is like partial ownership of the NEO platform. NEO token holders are entitled to vote for bookkeepers. NEO\u2019s use as a share in the company rather than a token is furthered by the fact that NEO is non-divisible. NEO is not meant to be transacted with\u200a\u2014\u200athat\u2019s why there is GAS.GAS is used for all operations on the NEO network. Now when a company registers or changes assets on the NEO blockchain, they pay in GAS\u200a\u2014\u200athis GAS is then distributed to all NEO holders. Anyone can claim this GAS by just holding their NEO in a personal wallet. Such as this one: NEONBookkeepers are entitled to charge a transaction fee (in GAS) for general transactions on the blockchain that only they (the bookkeepers) receive. However, by decoupling NEO and GAS, there is an incentive to keep transaction fees low; here\u2019s why:High transaction fees, which only benefit the bookkeepers, will prevent people from wanting to register their assets on the blockchain. The less assets registered, the less rewards NEO holders will get. Thus, NEO holders are incentivized to vote in bookkeepers who will keep transaction fees low.\u201c Low transaction fees = more users = more assets registered = more GAS to NEO holders.\u201d\u200a\u2014\u200aMalcolm Lerider from his\u00a0article:Bookkeepers are primarily incentivized by their desire to secure the network. They use the network, benefit from it, and have money staked in NEO. Thus, it is advantageous for them to secure it.It is unclear how rewards will be divided amongst ether holders when Ethereum becomes Proof of Stake. However, it appears that only large Ethereum holders will be able to stake and receive rewards.The NEON Wallet with the \u201cclaim gas\u201d\u00a0buttonThe genius of the NEO token is that it allows users to passively acquire GAS in their wallet. No need to run the computer, keep the wallet open, or expend electricity. No need to \u201cstake\u201d your tokens\u200a\u2014\u200abookkeepers do this for you. You could even have your NEO in a paper wallet. GAS is collected when you physically push the \u201cclaim GAS\u201d button. This also ensures that the NEO network doesn\u2019t need to calculate the interest of NEO holders with every block, reducing traffic and simplifying the compound interest formulas. The delegated bookkeepers maintain the network; your investment gains interest. This would not be possible without two separate tokens.Both NEO and GAS are capped at 100 million tokens.TLDR: Ethereum has one token: ether. NEO has two: NEO and GAS. There are huge advantages to having two tokens when using a proof of stake protocol.SourceSmart Contract\u00a0LanguageThe biggest difference between Ethereum and NEO smart contracts is the coding language options available. With Ethereum, contracts must be written in solidity\u200a\u2014\u200aA coding language created specifically for Ethereum. NEO on the other hand supports a variety of different languages, including the most commonly known. NEO supports five programming languages with plans to support an additional five in the future.There are certainly advantages to crafting a particular language for a particular platform. Ethereum developers designed solidity for Ethereum. However, far fewer people know solidity. By supporting the most common coding languages, NEO has an advantage in facilitating adoption. Most programmers today would have to learn solidity before working with Ethereum whereas with NEO, their knowledge is already applicable. It\u2019s also possible that existing business platforms could be placed onto the NEO blockchain without much modification.TLDR (seriously? It\u2019s like two paragraphs): Ethereum has one coding language: Solidity. NEO supports many different coding languages.Smart Contract ExecutionSmart contracts use what are called virtual machines (VM). Essentially, in layman\u2019s terms, virtual machines are machines that execute smart contracts and run inside the computers of miners or other validators. The VM is the environment that the smart contract runs in. Thus, if we want to know how efficient and effective smart contracts can be, we need to analyze the VM.NEO\u2019s VM optimizes smart contract code before executing the contract. What this means is that it takes the code and reorganizes it to make it more efficient. Imagine your mom gives you a grocery list. If it\u2019s anything like my mom\u2019s lists\u200a\u2014\u200aand she will probably object to this\u200a\u2014\u200athe items have no organization and I am constantly ping-ponging back and forth across the grocery store. But by organizing all the items into categories that I can then pick up together at the same part of the store (dairy, canned goods, cereals), my job becomes much quicker and easier. NEO does this; Ethereum does not. Now while this makes things much easier in the long run, in the initial phase it takes a bit longer to organize the list. NEO\u2019s contract execution takes slightly longer than Ethereum\u2019s, but is much more efficient in the long run.Ethereum plans to roll out this mechanism, but there is no timeline for it. Ultimately, this allows NEO to execute and run complex smart contracts faster and more efficiently than Ethereum.TLDR: NEO has a more efficient and faster way of executing smart contracts than Ethereum.Additional Important DifferencesNEO is theoretically quantum computer resistant, Ethereum is not\u200a\u2014\u200aWhen quantum computers develop enough, blockchains could be vulnerable. NEO has theoretically designed their blockchain to account for this. Ethereum does not have that capability.sk-Snarks: Ethereum\u2019s new privacy tool. sk-Snarks is the privacy protocol of ZCash. While there are far smarter people who can explain the technology far more intelligently than me, essentially sk-Snarks is important when we want to have data or contracts whose contents are private or confidential. We need to maintain the privacy of the data, but at the same time, prove we have ownership of it. sk-Snarks allows users to prove they have ownership without actually giving up the private data. NEO has no such capabilities. However, NEO\u2019s partnership with OnChain\u2019s Ontology offers NEO a privacy solution for businesses.", "responses": "155"}, {"title": "A hacker stole $31M of Ether\u200a\u2014\u200ahow it happened, and what it means for\u00a0Ethereum", "author_name": "Haseeb Qureshi", "author_profile_link": "https://medium.freecodecamp.org/@hosseeb", "link": "https://medium.freecodecamp.org/a-hacker-stole-31m-of-ether-how-it-happened-and-what-it-means-for-ethereum-9e5dc29e33ce?source=search_post---------2", "post_date": "Jul 20, 2017", "readtime": "16 min read", "upvotes": "9.7K", "content": "A hacker stole $31M of Ether\u200a\u2014\u200ahow it happened, and what it means for\u00a0EthereumHaseeb QureshiBlockedUnblockFollowFollowingJul 20, 2017Yesterday, a hacker pulled off the second biggest heist in the history of digital currencies.Around 12:00 PST, an unknown attacker exploited a critical flaw in the Parity multi-signature wallet on the Ethereum network, draining three massive wallets of over $31,000,000 worth of Ether in a matter of minutes. Given a couple more hours, the hacker could\u2019ve made off with over $180,000,000 from vulnerable wallets.But someone stopped them.Having sounded the alarm bells, a group of benevolent white-hat hackers from the Ethereum community rapidly organized. They analyzed the attack and realized that there was no way to reverse the thefts, yet many more wallets were vulnerable. Time was of the essence, so they saw only one available option: hack the remaining wallets before the attacker did.By exploiting the same vulnerability, the white-hats hacked all of the remaining at-risk wallets and drained their accounts, effectively preventing the attacker from reaching any of the remaining $150,000,000.Yes, you read that right.To prevent the hacker from robbing any more banks, the white-hats wrote software to rob all of the remaining banks in the world. Once the money was safely stolen, they began the process of returning the funds to their respective account holders. The people who had their money saved by this heroic feat are now in the process of retrieving their funds.It\u2019s an extraordinary story, and it has significant implications for the world of cryptocurrencies.It\u2019s important to understand that this exploit was not a vulnerability in Ethereum or in Parity itself. Rather, it was a vulnerability in the default smart contract code that the Parity client gives the user for deploying multi-signature wallets.This is all pretty complicated, so to make the details of this clear for everyone, this post is broken into three parts:What exactly happened? An explanation of Ethereum, smart contracts, and multi-signature wallets.How did they do it? A technical explanation of the attack (specifically for programmers).What now? The attack\u2019s implications about the future and security of smart contracts.If you are familiar with Ethereum and the crypto world, you can skip to the second section.1. What exactly happened?There are three building blocks to this story: Ethereum, smart contracts, and digital wallets.Ethereum is a digital currency invented in 2013\u200a\u2014\u200aa full 4 years after the release of Bitcoin. It has since grown to be the second largest digital currency in the world by market cap\u200a\u2014\u200a$20 billion, compared to Bitcoin\u2019s $40 billion.Like all cryptocurrencies, Ethereum is a descendant of the Bitcoin protocol, and improves on Bitcoin\u2019s design. But don\u2019t be fooled: though it is a digital currency like Bitcoin, Ethereum is much more powerful.While Bitcoin uses its blockchain to implement a ledger of monetary transactions, Ethereum uses its blockchain to record state transitions in a gigantic distributed computer. Ethereum\u2019s corresponding digital currency, ether, is essentially a side effect of powering this massive computer.To put it another way, Ethereum is literally a computer that spans the entire world. Anyone who runs the Ethereum software on their computer is participating in the operations of this world-computer, the Ethereum Virtual Machine (EVM). Because the EVM was designed to be Turing-complete (ignoring gas limits), it can do almost anything that can be expressed in a computer program.Let me be emphatic: this is crazy stuff. The crypto world is ebullient about the potential of Ethereum, which has seen its value skyrocket in the last 6 months.The developer community has rallied behind it, and there\u2019s a lot of excitement about what can be built on top of the EVM\u200a\u2014\u200aand this brings us to smart contracts.Smart contracts are simply computer programs that run on the EVM. In many ways, they are like normal contracts, except they don\u2019t need lawyers or judges to interpret them. Instead, they are compiled to bytecode and interpreted unambiguously by the EVM. With these programs, you can (among other things) programmatically transfer digital currency based solely on the rules of the contract code.Of course, there are things normal contracts do that smart contracts can\u2019t\u200a\u2014\u200asmart contracts can\u2019t easily interact with things that aren\u2019t on the blockchain. But smart contracts can also do things that normal contracts can\u2019t, such as enforce a set of rules entirely through unbreakable cryptography.This leads us to the notion of wallets. In the world of digital currencies, wallets are how you store your assets. You gain access to your wallet using essentially a secret password, also known as your private key (simplified a bit).There are many different types of wallets that confer different security properties, such as withdrawal limits. One of the most popular types is the multi-signature wallet.In a multi-signature wallet, there are several private keys that can unlock the wallet, but just one key is not enough to unlock it. If your multi-signature wallet has 3 keys, for example, you can specify that at least 2 of the 3 keys must be provided to successfully unlock it.This means that if you, your father, and your mother are each signatories on this wallet, even if a criminal hacked your mother and stole her private key, they could still not access your funds. This leads to much stronger security guarantees, so multi-sigs are a standard in wallet security.This is the type of wallet the hacker attacked.So what went wrong? Did they break the private keys? Did they use a quantum computer, or some kind of cutting-edge factoring algorithm?Nope, all the cryptography was sound. The exploit was almost laughably simple: they found a programmer-introduced bug in the code that let them re-initialize the wallet, almost like restoring it to factory settings. Once they did that, they were free to set themselves as the new owners, and then walk out with everything.2. How did this\u00a0happen?What follows is a technical explanation of exactly what happened. If you\u2019re not a developer, feel free to skip to the next section, since this is going to be programming-heavy.Ethereum has a fairly unique programming model. On Ethereum, you write code by publishing contracts (which you can think of as objects), and transactions are executed by calling methods on these objects to mutate their state.In order to run code on Ethereum, you need to first deploy the contract (the deployment is itself a transaction), which costs a small amount of Ether. You then need to call methods on the contract to interact with it, which costs more Ether. As you can imagine, this incentivizes a programmer to optimize their code, both to minimize transactions and minimize computation costs.One way to reduce costs is to use libraries. By making your contract call out to a shared library that was deployed at a previous time, you don\u2019t have to re-deploy any shared code. In Ethereum, keeping your code DRY will directly save you money.The default multi-sig wallet in Parity did exactly this. It held a reference to a shared external library which contained wallet initialization logic. This shared library is referenced by the public key of the library contract.// FIELDSaddress constant _walletLibrary = 0xa657491c1e7f16adb39b9b60e87bbb8d93988bc3;The library is called in several places, via an EVM instruction called DELEGATECALL, which does the following: for whatever method that calls DELEGATECALL, it will call the same method on the contract you're delegating to, but using the context of the current contract. It's essentially like a super call, except without the inheritance part. (The equivalent in JavaScript would be OtherClass.functionName.apply(this, args).)Here\u2019s an example of this in their multi-sig wallet: the isOwner method just delegates to the shared wallet library's isOwner method, using the current contract's state:function isOwner(address _addr) constant returns (bool) {    return _walletLibrary.delegatecall(msg.data);}This is all innocent enough. The multi-sig wallet itself contained all of the right permission checks, and they were sure to rigorously enforce authorization on all sensitive actions related to the wallet\u2019s state.But they made one critical mistake.Solidity allows you to define a \u201cfallback method.\u201d This is the method that gets called when there\u2019s no method that matches a given method name. You define it by not giving it a name:function() {    // do stuff here for all unknown methods}The Parity team decided to let any unknown method that sent Ether to the contract just default to depositing the sent Ether.function() payable {    // payable is just a keyword that means this method can receive/pay Etherif (msg.value > 0) {    // just being sent some cash?    Deposit(msg.sender, msg.value);    } else {    throw;  }}But they took it a step further, and herein was their critical mistake. Below is the actual code that was attacked.function() payable {    // just being sent some cash?  if (msg.value > 0)    Deposit(msg.sender, msg.value);  else if (msg.data.length > 0)    _walletLibrary.delegatecall(msg.data);}Basically:If the method name is not defined on this contract\u2026And there\u2019s no ether being sent in the transaction\u2026And there is some data in the message payload\u2026Then it will call the exact same method if it\u2019s defined in _walletLibrary, but in the context of this contract.Using this, the attacker called a method called initWallet(), which was not defined on the multisig contract but was defined in the shared wallet library:function initWallet(address[] _owners, uint _required, uint _daylimit) {    initDaylimit(_daylimit);  initMultiowned(_owners, _required);}Which calls the initMultiowned method...function initMultiowned(address[] _owners, uint _required) {    m_numOwners = _owners.length + 1;  m_owners[1] = uint(msg.sender);  m_ownerIndex[uint(msg.sender)] = 1;  for (uint i = 0; i < _owners.length; ++i)  {    m_owners[2 + i] = uint(_owners[i]);    m_ownerIndex[uint(_owners[i])] = 2 + i;  }  m_required = _required;}Do you see what just happened there? The attacker essentially reinitialized the contract by delegating through the library method, overwriting the owners on the original contract. They and whatever array of owners they supply as arguments will be the new owners.Given that they now control the entire wallet, they can trivially extract the remainder of the balance. And that\u2019s precisely what they did.The initWallet: https://etherscan.io/tx/0x707aabc2f24d756480330b75fb4890ef6b8a26ce0554ec80e3d8ab105e63db07The transfer:\u00a0https://etherscan.io/tx/0x9654a93939e98ce84f09038b9855b099da38863b3c2e0e04fd59a540de1cb1e5So what was ultimately the vulnerability? You could argue there were two. First, the initWallet and initMultiowned in the wallet library were not marked as internal (this is like a private method, which would prevent this delegated call), and those methods did not check that the wallet wasn't already initialized. Either check would've made this hack impossible.The second vulnerability was the raw delegateCall. You can think of this as equivalent to a raw eval statement, running on a user-supplied string. In an attempt to be succinct, this contract used metaprogramming to proxy potential method calls to an underlying library. The safer approach here would be to whitelist specific methods that the user is allowed to call.The trouble, of course, is that this is more expensive in gas costs (since it has to evaluate more conditionals). But when it comes to security, we probably have to get over this concern when writing smart contracts that move massive amounts of money.So that was the attack.It was a clever catch, but once you point it out, it seems almost elementary. The attacker then jumped on this vulnerability for three of the largest wallets they could find\u200a\u2014\u200abut judging from the transaction times, they were doing this entirely manually.The white-hat group was doing this at scale using scripts, and that\u2019s why they were able to beat the attacker to the punch. Given this, it\u2019s unlikely that the attacker was very sophisticated in how they planned their attack.You might ask the question though\u200a\u2014\u200awhy don\u2019t they just roll back this hack, like they did with the DAO hack?Unfortunately that\u2019s not really possible. The DAO hack was unique in that when the attacker drained the DAO into a child DAO, the funds were frozen for many days inside a smart contract before they could be released to the attacker.This prevented any of the stolen funds from going into circulation, so the stolen Ether was effectively siloed. This gave the Ethereum community plenty of time to conduct a public quorum about how to deal with the attack.In this attack, the attacker immediately stole the funds and could start spending them. A hard fork would be impractical\u2013what do you do about all of the transactions that occur downstream? What about the people who innocently traded assets with the attacker? Once the ether they\u2019ve stolen gets laundered and enters general circulation, it\u2019s like counterfeit bills circulating in the economy\u200a\u2014\u200ait\u2019s easy to stop when it\u2019s all in one briefcase, but once everyone\u2019s potentially holding a counterfeit bill, you can\u2019t really turn back the clock anymore.So the transaction won\u2019t get reversed. The $31M loss stands. It\u2019s a costly, but necessary lesson.So what should we take away from this?3. What does this attack mean for Ethereum?There are several important takeaways here.First, remember, this was not a flaw in Ethereum or in smart contracts in general. Rather, it was a developer error in a particular contract.So who were the crackpot developers who wrote this? They should\u2019ve known better, right?The developers here were a cross-collaboration between the Ethereum foundation (literally the creators of Ethereum), the Parity core team, and members of the open-source community. It underwent extensive peer review. This is basically the highest standard of programming that exists in the Ethereum ecosystem.These developers were human. They made a mistake. And so did the reviewers who audited this code.I\u2019ve read some comments on Reddit and HackerNews along the lines of: \u201cWhat an obvious mistake! How was it even possible they missed this?\u201d (Ignoring that the \u201cobvious\u201d vulnerability was introduced in January and only now discovered.)When I see responses like this, I know the people commenting are not professional developers. For a serious developer, the reaction is instead: damn, that was a dumb mistake. I\u2019m glad I wasn\u2019t the one who made it.Mistakes of this sort are routinely made in programming. All programs carry the risk of developer error. We have to throw off the mindset of \u201cif they were just more careful, this wouldn\u2019t have happened.\u201d At a certain scale, carefulness is not enough.As programs scale to non-trivial complexity, you have to start taking it as a given that programs are probably not correct. No amount of human diligence or testing is sufficient to prevent all possible bugs. Even organizations like Google or NASA make programming mistakes, despite the extreme rigor they apply to their most critical code.We would do well to take a page from site reliability practices at companies like Google and Airbnb. Whenever there\u2019s a production bug or outage, they do a postmortem analysis and distribute it within the company. In these postmortems, there is always a principle of never blaming individuals.Blaming mistakes on individuals is pointless, because all programmers, no matter how experienced, have a nonzero likelihood of making a mistake. Instead, the purpose of a postmortem is to identify what in the process allowed that mistake to get deployed.The problem was not that the developer forgot to add internal to the wallet library, or that they did a raw delegateCall without checking what method was being called.The problem is that their programming toolchain allowed them to make these mistakes.As the smart contract ecosystem evolves, it has to evolve in the direction of making these mistakes harder, and that means making contracts secure by default.This leads me to my next point.Strength is a weakness when it comes to programming languages. The stronger and more expressive a programming language is, the more complex its code becomes. Solidity is a very complex language, modeled to resemble Java.Complexity is the enemy of security. Complex programs are more difficult to reason about and harder to identify edge cases for. I think that languages like Viper (maintained by Vitalik Buterin) are a promising step in this direction. Viper includes by default basic security mechanisms, such as bounded looping constructs, no integer overflows, and prevents other basic bugs that developers shouldn\u2019t have to reason about.The less the language lets you do, the easier it is to analyze and prove properties of a contract. Security is hard because the only way to prove a positive statement like \u201cthis contract is secure\u201d is to disprove every possible attack vector: \u201cthis contract cannot be re-initialized,\u201d \u201cits funds cannot be accessed except by the owners,\u201d etc. The fewer possible attack vectors you have to consider, the easier it is to develop a secure contract.A simpler programming model also allows things like formal verification and automatic test generation. These are areas under active research, but just as smart contracts have incorporated cutting-edge cryptography, they also should start incorporating the leading edge of programming language design.There is a bigger lesson here too.Most of the programmers who are getting into this space, myself included, come from a web development background, and the blockchain toolchain is designed to be familiar for web developers. Solidity has achieved tremendous adoption in the developer community because of its familiarity to other forms of programming. In a way, this may end up being its downfall.The problem is, blockchain programming is fundamentally different from web development.Let me explain.Before the age of the client-server web model, most programming was done for packaged consumer software or on embedded systems. This was before the day of automatic software updates. In these programs, a shipped product was final\u200a\u2014\u200ayou released one form of your software every 6 months, and if there was a bug, that bug would have to stand until the next release. Because of this longer development cycle, all software releases were rigorously tested under all conceivable circumstances.Web development is far more forgiving. When you push bad code to a web server, it\u2019s not a big deal if there\u2019s a critical mistake\u200a\u2014\u200ayou can just roll back the code, or roll forward with a fix, and all is well because you control the server. Or if the worst happens and there\u2019s an active breach or a data leak, you can always stop the bleeding by shutting off your servers and disconnecting yourself from the network.These two development models are fundamentally different. It\u2019s only out of something like web development that you can get the motto \u201cmove fast and break things.\u201dMost programmers today are trained on the web development model. Unfortunately, the blockchain security model is more akin to the older model.In blockchain, code is intrinsically unrevertible. Once you deploy a bad smart contract, anyone is free to attack it as long and hard as they can, and there\u2019s no way to take it back if they get to it first. Unless you build intelligent security mechanisms into your contracts, if there\u2019s a bug or successful attack, there\u2019s no way to shut off your servers and fix the mistake. Being on Ethereum by definition means everyone owns your server.A common saying in cybersecurity is \u201cattack is always easier than defense.\u201d Blockchain sharply multiplies this imbalance. It\u2019s far easier to attack because you have access to the code of every contract, know how much money is in it, and can take as long as you want to try to attack it. And once your attack is successful, you can potentially steal all of the money in the contract.Imagine that you were deploying software for vending machines. But instead of a bug allowing you to simply steal candy from one machine, the bug allowed you to simultaneously steal candy from every machine in the world that employed this software. Yeah, that\u2019s how blockchain works.In the case of a successful attack, defense is extremely difficult. The white-hats in the Parity hack demonstrated how limited their defense options were\u200a\u2014\u200athere was no way to secure or dismantle the contracts, or even to hack back the stolen money; all they could do was hack the remaining vulnerable contracts before the attacker did.This might seem to spell a dark future.But I don\u2019t think this is a death knell for blockchain programming. Rather, it confirms what everyone already knows: this ecosystem is young and immature. It\u2019s going to take a lot of work to develop the training and discipline to treat smart contracts the way that banks treat their ATM software. But we\u2019re going to have to get there for blockchain to be successful in the long run.This means not just programmers maturing and getting more training. It also means developing tools and languages that make all of this easier, and give us rigorous guarantees about our code.It\u2019s still early. Ethereum is a work in progress, and it\u2019s changing rapidly. You should not treat Ethereum as a bank or as a replacement for financial infrastructure. And certainly you should not store any money in a hot wallet that you\u2019re not comfortable losing.But despite all that, I still think Ethereum is going to win in the long run. And here\u2019s why: the developer community in Ethereum is what makes it so powerful.Ethereum will not live or die because of the money in it. It will live or die based on the developers who are fighting for it.The league of white-hats who came together and defended the vulnerable wallets didn\u2019t do it for money. They did it because they believe in this ecosystem. They want Ethereum to thrive. They want to see their vision of the future come true. And after all the speculation and the profiteering, it\u2019s ultimately these people who are going to usher the community into its future. They are fundamentally why Ethereum will win in the long run\u2014or if they abandon Ethereum, their abandonment will be why it loses.This attack is important. It will shake people up. It will force the community to take a long, hard look at security best practices. It will force developers to treat smart contract programming with far more rigor than they currently do.But this attack hasn\u2019t shaken the strength of the builders who are working on this stuff. So in that sense it\u2019s a temporary setback.In the end, attacks like this are good for the community to grow up. They call you to your senses and force you to keep your eyes open. It hurts, and the press will likely make a mess of the story. But every wound makes the community stronger, and gets us closer to really deeply understanding the technology of blockchain\u200a\u2014\u200aboth its dangers, and its amazing potential.P.S. If you\u2019re a dev and you want to learn more about smart contract security, this is a really good resource.Errata: This article originally said that Gavin Wood was the developer of the contract, which is incorrect. Gavin is the founder of Parity and pushed the fix to the contract, but was not the original developer. It also originally claimed that $77M additional funds were vulnerable, but this doesn\u2019t count all of the ERC20 (ICO) tokens that were vulnerable. The total amount is actually $150,000,000+ if you include all ERC20 tokens. As of the time of writing this (July 21st 4PM EST), the total value of the assets saved by the white-hats was $179,704,659.", "responses": "153"}, {"title": "Ethereum will pass Bitcoin in 2018: my cryptocurrency investment portfolio", "author_name": "Jason Kowalski", "author_profile_link": "https://hackernoon.com/@jasonkowalski", "link": "https://hackernoon.com/ethereum-will-pass-bitcoin-in-2018-my-cryptocurrency-investment-portfolio-dcab52905bba?source=search_post---------3", "post_date": "Jan 12, 2018", "readtime": "8 min read", "upvotes": "25K", "content": "Ethereum will pass Bitcoin in 2018: my cryptocurrency investment portfolioJason KowalskiBlockedUnblockFollowFollowingJan 12, 2018In the last few days, many have asked about my investment strategy and portfolio mix after writing 95Percent\u2019s: Blockchain Technology.After much deliberation, in this post, I\u2019ve decided to share my holdings with you. Perhaps more importantly, I\u2019ve decided to also share my underlying philosophy. As a reminder, I know nothing. None of this should be construed as investment advice, and you should do your own research before making any investments. I would be financially okay if I lost all of my invested money: you should make sure you could survive a total loss before investing any funds.But enough of that, how should you approach investing in cryptocurrencies? First, I advocate creating your own investment tenets. Tenets are also a crucial aspect of the product management process. I recommend creating tenets before diving into any business, project or problem.Why do we write tenets?Tenets are used to make hard decisionsEach tenet expresses the conflict arising from two (or more) competing philosophiesEach tenet ultimately demonstrates preference for one philosophy over othersMost people have their own philosophies and preferences, but they don\u2019t write them down. Writing them out is crucial because it crystalizes your thinking. Tenets are helpful when times are good and indispensable when things get tough. You should debate your tenets heavily with family, friends, and yourself. Below I share five of my cryptocurrency investment tenets:Jason\u2019s Cryptocurrency Tenets [January 2018]1) I will prioritize platform investments (think Ethereum) over application investments (think Dash). Strong infrastructure scales and changes the world. Successful applications are hard to predict and are not stable over time. Platforms better withstand changing customer needs.2) I will choose cryptocurrencies with user adoption and strong focus on user adoption over cryptocurrencies with the latest tech or prettiest whitepapers.3) I will take the super-long term view. I will prioritize cryptocurrency that have the potential to be trillion dollar businesses and will stay away from currencies with more barriers to widespread adoption. If a cryptocurrency is unlikely to ever be used en masse, I won\u2019t buy it. I investment in fundamentals not merely public opinion.4) I will greatly value signals in the market, especially signals from entities with inside information and large investment positions\u200a\u2014\u200apotentially over even my own analysis.5) I value cryptocurrencies that demonstrate the ability to change direction, pivot quickly and make decisions over cryptocurrencies that emphasize status quo, tradition, and moving wisely but slowly. I recognize this is partly a function of team structure and leadership.After painstakingly working through my tenets, I\u2019ve researched many of the cryptocoins available today. Based on my personal investment philosophy and this research, I\u2019ve made several investments over the last month. Here\u2019s my positions as of January 11th 2018:Jason\u2019s Cryptocurrency Portfolio* as of January 11th 2018:Ethereum: 50%Stellar: 20%Neo: 20%Request Network: 10%*I\u2019ve rounded these numbers to make them prettier.Ethereum: 50%As we wrote in Blockchain Technology: \u201cBlockchain technology creates information networks. The fundamental rule of networks is that when a new person joins any network, the network becomes exponentially more valuable. As a corollary, each time another person joins a widely-used network, it becomes exponentially harder for competing networks to offer similar value to people. You use Facebook because all of your friends are on the platform. You are less likely to use a new social network because few of your friends would be on it. As a result, networks tend to produce winner-takes-all markets. Facebook, WeChat and a few other businesses, for example, dominate the social networking space. We expect a similar winner-take-all outcome for blockchain technology. So far, founders have created many hundreds of digital coins. They will create thousands more over the next few years. We expect a handful of these digital coins to successfully walk out onto the global stage, while the vast majority of these coins will ultimately become valueless.\u201dAmazon is a platform. Facebook is a platform. Platforms dominate the internet. As we\u2019ve seen from Ethereum\u2019s creation of the Initial Coin Offering (ICO) platform, platform coins will dominate the blockchain coin as well. We\u2019ll see many cryptocoins repositioning themselves as platform coins, especially starting in the second half of 2018 and into 2019 when many smaller, more niche coins start to flame out. Based on my research, Ethereum is currently best positioned to win the platform war. Pure and simple. I may change my view in the next few months or quarters but for now Ethereum gets the majority of my money.Stellar: 20%Stellar is a platform that wants to make it really easy for companies to ICO (versus using Ethereum). Stellar is ultra-focused on this use case, but that\u2019s okay, because this use case is massive.Again, per Blockchain Technology, \u201c[blockchain] technology can also make physical-world assets more liquid (easier to sell and buy) by making them more reducible. In other words, the blockchain better facilitates ownership of assets across multiple people\u2026 while mega-companies (e.g., Amazon, AirBnB) have successfully built their own digital marketplaces in the past, blockchain provides the available-to-all, trust-building, low-cost financial infrastructure via smart contracts, secure transactions, and an authoritative ledger to [almost anyone]\u2026Unlike crowd-funding sites like Kickstarter, where early backers receive nothing but a product or service, ICOs let entities actually own part of meaningful ideas.\u201dThe tokenization of assets via blockchain is going to change the world. So far, this use case is the only one Ethereum has proved it can solve and I find it possible that Stellar eats some of Ethereum\u2019s pie: I am watching Stellar carefully. Stellar focuses on usability (think: MVP) instead of extensibility (think: useless features). The founder started Mt. GOX and built the initial framework for Ripple. Stellar is backed by Stripe and has support from top advisors in tech.Neo: 20%Over the last decade, China has made it clear that they want to build their own solutions to world problems. I expect this trend to continue into the blockchain world, and expect at least a duopoly platform paradigm (at least one major smart contract platform for the West, and at least one smart contract platform for the East).Request Network: 10%Request Network is a platform specifically focused on the payments space (built on top of Ethereum). While the sized of the tokenization of assets space (e.g. ICO) is almost incalculable, the payments space remains enormous. Request Network is a big team bet. As a product leader, I value team organization a lot. I\u2019ve studied the core developers of many of the top blockchain coins, and find that most projects are being run relatively poorly compared to more traditional software development projects today (partly a function of decentralization of blockchain teams). Many teams don\u2019t have updated visions or project plans and as a result miss deadlines and seem to be prioritizing things no one wants. Request Network strikes me as agile, able to pivot quickly, and ruthlessly focused on user growth and customer experience. (I love the bi-weekly updates.). I also immensely value their time in YCombinator, the top startup incubator in the world.Like the pre-blockchain startup world, real-life customer feedback is everything. I want a team desperate to get their coin to market. From there, they can interact with real customers and then make technical changes that are likely to lead to meaningful improvements for real customers.Mainstream cryptocoins I am NOT invested in:BitcoinIn my opinion, a huge milestone for blockchain technology will be to move away from the Bitcoin Hegemony. Right now, the cryptocurrency market as whole is psychologically entwined with Bitcoin. When Bitcoin plummets, the market plummets, although we\u2019ve seen signs of change in the last few weeks. In 2018, I predict that Ethereum (or another platform) will surpass Bitcoin. The cryptocurrency market will finally detangle itself from Bitcoin.I don\u2019t find pro-Bitcoin arguments particularly strong. Initially, Bitcoin initially saw a lot of success helping entities perform discreet transactions (think: Silk Road). Currently, though, Bitcoin isn\u2019t particularly helpful in the payments space (slow, expensive, and unfocused): the digital currency is unlikely to scale to widespread user adoption for payments. Bitcoin also can\u2019t help with ICOs: it is not a platform. Perhaps most concerning, from a development perspective Bitcoin moves slowly, has divided leadership, and doesn\u2019t practice user-driven development (at least compared to other digital coins). Proponents cite these characteristics as advantages and argue that Bitcoin is a store of value.We flesh out the digital coin role as a store of value in Blockchain Technology: \u201cBlockchain technology also has potential to provide a new independent store of value. Today, the classic independent store of value, gold, is partly valuable because humans have decided to value it independently of nation states (e.g., Canada) or nation alliances (e.g., the European Union) unlike other mainstream currencies (e.g., the United States dollar is closely tied to the success of the United States of America). Gold is generally inversely correlated with the US dollar: in other words, gold acts as a hedge against the current global financial system. Because gold is difficult to store\u200a\u2014\u200aheavy, relatively insecure\u200a\u2014\u200adigital blockchain-currencies represent an attractive alternative. If digital currencies become more stable over time (currently, they are extremely volatile), they may one day augment or supplement assets such as gold.\u201dThe problem is that no one uses Bitcoin as a stable store of value today. Additionally, Bitcoin is relatively uncorrelated with the US dollar, so it doesn\u2019t act as a particularly useful hedge. Ultimately, I think digital coins will be strong store of values, but this is far, far down the road. At that point, I find that other cryptocoins are just as likely or more likely to act as global store of values compared to Bitcoin.I further argued that the bigger and more immediate store of value opportunity is \u201chelping entities buy into the global financial system in the first place. In developing countries, for example, many entities are eager to shift local, unstable currencies to stable currencies such as the US dollar to better protect their wealth. Like the US dollar today, the blockchain-backed currencies that facilitate world transactions tomorrow will also naturally act as a store of value. Entities will invest in these currencies as they do the US dollar today. As a result, the same blockchain-based currencies that gain mainstream adoption for payments are also likely to gain mainstream adoption as stores of value.\u201d We will be forever indebted to Bitcoin but 2018 will mark Ethereum passing Bitcoin, the marketing falling, and then ultimately rebounding stronger than before. The age of the Blockchain Platform is beginning.Privacy-centric cryptocoinWhile, private, fully-anonymous transactions are a large blockchain use case, coins emphasizing privacy will struggle to gain mass adoption in the long-term. I expect privacy-centric coins to bear the brunt of initial government scrutiny and regulation. I choose to make my investments on the more public side of the blockchain movement. That said, Monero would be my current pick in the privacy-centric digital coin space.RippleAs we wrote in Blockchain Technology: \u201cin the short-term, partial blockchain solutions [like Ripple] will become common. Already, financial institutions are creating their own private blockchain networks and producing digital coin. Participating institutions act as nodes in the blockchain, and have visibility into all transaction on the shared digital ledger.\u201dI like Ripple, and particularly the focus on getting customers. Like many others, however, I am concerned about the difference between the highly-valuable Ripple Payment Protocol and XRP as an investment vehicle. I also see in-house blockchain development from large institutions as meaningful competition.ThanksHopefully my perspective is helpful. If I helped you crystallize your own thinking, I\u2019d very much appreciate a small donation to my Ethereum wallet.Ethereum wallet: 0x81ff5029a05ce15c3b6d6e27c7d89a7c30ecaf32Or just clap a lot =)To trade, I buy Ethereum in CoinBase and then move these coins into Binance.Coinbase: https://www.coinbase.com/join/5a39ac52c9e83802d5f70a27Binance: https://www.binance.com/?ref=18572991Again, this is not investment advice. I re-adjust my portfolio constantly based on new information and could have a completely different set of investments tomorrow. One must be careful not to be affected by sunk cost or fear of missing out biases\u200a\u2014\u200aand strive to act as objectively as possible. Good luck.", "responses": "137"}, {"title": "Cardano: Ethereum and NEO Killer or Overpriced?", "author_name": "Noam Levenson", "author_profile_link": "https://hackernoon.com/@noamlevenson", "link": "https://hackernoon.com/cardano-ethereum-and-neo-killer-or-overhyped-and-overpriced-8fcd5f8abcdf?source=search_post---------4", "post_date": "Dec 28, 2017", "readtime": "22 min read", "upvotes": "35K", "content": "Cardano: Ethereum and NEO Killer or Overpriced?As the first blockchain with peer reviewed tech, Cardano is an ambitious platform. Can it stack up to NEO and Ethereum?Noam LevensonBlockedUnblockFollowFollowingDec 28, 2017TOKEN: ADACardano has been on the tip of everyone\u2019s tongue since it\u2019s enormous run up earlier this month. Even in the volatile world of cryptocurrency, Cardano\u2019s 2000% increase over three weeks was extraordinary, and the community took notice. It now sits as the 6th largest cryptocurrency market cap at over $10 billion. Yet, before Cardano and its then $700 million market cap suddenly appeared on coinmarketcap.com, most had never heard of the project before. Its sudden appearance and enormous subsequent increase have left the blockchain community scratching their heads and scouring for information.So like with any new kid on the block, we want to understand what Cardano is, what separates it from other blockchain platforms, and whether it can play centerfield for our neighborhood team\u2026This article examines Cardano both as a standalone platform, as well as in comparison to Ethereum and NEO. For an analysis of NEO versus Ethereum, you should read this. I understand that EOS and other third generation platforms are also relevant; I will research and write about those later on. Since I have already extensively covered NEO, I will dedicate this article primarily to providing an in-depth analysis of Cardano. I will also compare each unique component to those of NEO and Ethereum. I will quote directly from my past article on some aspects. Let\u2019s begin\u2026What is\u00a0Cardano?Cardano is the, no-crust on his sandwich, kid at school who uses words like \u201cpeer-reviewed\u201d and reads \u201cacademic journals.\u201d He occasionally gets shoved into his locker and has never been good at sports; but 10 years later he\u2019s driving around a Ferrari and you realized you never should have judged him in the first place.Cardano, put simply, is a blockchain platform that provides a programmable blockchain and smart contracts for dApp development. But the industry is ripe with strong competition: Ethereum has first mover advantage and a large user base, NEO focuses on a smart economy, ARK has smart bridges and blockchain interoperability; so what makes Cardano special and why can it be a competitive player in the field?Cardano\u2019s One Liner: Cardano is the industry\u2019s first platform that utilizes academically peer-reviewed open source code.Definitely don\u2019t want bugs in the code for this airplane\u2019s protocol\u2026Translation? It means that the Cardano project boasts a network of global researchers and scientists that have contributed to and developed an advanced blockchain protocol. All of Cardano\u2019s protocol technology goes through an extensive peer review process, similar to the process that airplane code might go through. Their conclusion is that code that supports a global economy should have the same rigorous scrutiny as code on which lives depend.Cardano is known as a 3rd generation blockchain. Bitcoin was the 1st generation. Ethereum was the 2nd. Ethereum led the pack, but because its technology was fundamentally new, the technology was rudimentary. Now, Ethereum must rely on its governance system to upgrade and scale. 3rd generation blockchains, like Cardano, have the advantage of hindsight. They can identify the drawbacks and constraints of previous projects and develop accordingly. This is precisely the path that Cardano took. The project emerged in 2014, not with a whitepaper, but rather with collective research and collaboration, focused on identifying the limitations of present blockchains. They then proceeded to code from the ground up, attempting to address each of those limitations. Each building block was submitted to conferences and experts for review before being added to the larger building.This peer reviewed process is incredibly important, especially considering that poor coding and development can lead to catastrophic results (think Parity and DAO hacks). How many developers are there in the world who can effectively code a blockchain project? How many developers can code quality projects in an entirely new industry, on entirely new technology? I think that number is certainly less than the 1380 cryptocurrencies posted on coinmarketcap.com. So much focus has been directed towards scam projects; I think a more important focus should be placed on legitimate projects that are just done poorly. Far more people will lose money in this industry to teams and developers who just weren\u2019t very good than to criminal money grabs. So the question must be asked: how do we know a project is good? How do we know the code is kosher? One way, as Ethereum has done and NEO is doing, is through the bumpy, trial and error road of adoption. Cardano\u2019s method of peer review is another.With this philosophy of methodical and peer reviewed development, Cardano is working towards addressing the problems of 2nd generation blockchains.More Than Just\u00a0CardanoBefore we get into what limitations Cardano addresses and what makes the project unique, we should understand who is behind Cardano.The project is supported by three entities, all serving different purposes within the ecosystem.The Cardano FoundationCardano is supported by a nonprofit company, known as the Cardano Foundation. The foundation serves several purposes, both to Cardano and to the blockchain community as a whole. They work towards promoting Cardano to the greater community, educating about cryptocurrency, and working with governments around regulation. An organization like this is important for the adoption of a blockchain platform; the foundation provides a standard body that can facilitate cooperation and adoption with enterprises and businesses. The Enterprise Ethereum Alliance serves a similar purpose for Ethereum. OnChain, a partner of NEO, while not a nonprofit, also serves to connect public blockchains with governments and businesses. Since blockchain platforms such as NEO, Ethereum, and Cardano are decentralized, these organizations provide a centralized body for businesses to work with. Like the publishing agency for the platform.To note too, the Cardano Foundation hosts a variety of digestible resources about Cardano. From overviews of the project and the technology to blog updates detailing exactly how the team operates, their exact working schedule, and their release timeline. I have honestly never seen such transparency.Input Output Hong Kong\u00a0(IOHK)IOHK is an engineering company that develops blockchain solutions for academic institutions, corporations, and governments. The company is led by Charles Hoskinson and Jeremy Wood, former CEO and Executive Assistant of Ethereum respectively. IOHK supports Cardano and boasts an extensive research team\u200a\u2014\u200a17 accredited individuals. This team has been responsible for the development of Cardano\u2019s technology and digital wallet. IOHK also supports several other blockchain projects, including Ethereum Classic. For the tech minded, the website features all of their peer-reviewed papers.Also, I recommend you go to the website just to play around with the colorful interface.EmurgoEmurgo, a Japanese based company, both assists established businesses with integrating blockchain technology, as well as invests in startup ventures. Emurgo\u2019s connects businesses to the Cardano blockchain.This delegation of tasks between IOHK, the Cardano Foundation, and Emurgo is interesting. I am supportive of the concept. I can understand how dividing the development and engineering from the marketing and networking might allow for a more efficient system. Each organization serves a different purpose within the ecosystem.TLDR: Cardano is supported by three organizations. The Cardano Foundation supports the platform by promoting Cardano to the greater community, educating about cryptocurrency, and working with regulation. IOHK is the engineering and development organization behind the Cardano technology. Emurgo works towards integrating the platform with businesses.What Makes Cardano\u00a0Special?As Calvin Harris says, \u201cthis is what you came for.\u201dA platform can have the flashiest website, the most robust development team, and the largest collection of \u201cpeer reviewed\u201d papers, but if it\u2019s not accomplishing something new\u200a\u2014\u200asomething revolutionary\u200a\u2014\u200athen it will die. For in this space, competition is stiff, and everyone is competing against Ethereum, the king of dApps.Cardano is ambitious, but largely undeveloped. I will explore future features that Cardano will implement, but for now, it\u2019s most important to focus on the foundation. The features and protocols that form the basis for Cardano\u2019s future.Listed in the order I explore them, I believe the unique aspects of Cardano are: layered technology, proof of stake protocol, coding language, wallet, governance model, and treasury.Cardano technology is layered like this delicious cakeLayered TechnologyWith value transfers, there are two sets of information. There is the simple, from, to whom, when, and how much\u200a\u2014\u200athis is the only information Bitcoin can support. However, as we are aware, in our real world, value transfers are never this simple. Associated with each transaction we can also ask: what are the terms and conditions of the transfer, why was the money transferred, and what were the involved entities? This is known as metadata.Ethereum, the 2nd generation blockchain, enabled the integration of all of this information. They call the connection between the actual value transfer and the associated metadata smart contracts. Programmable contracts. However, with Ethereum, because there is no separation between accounting and computing, this information is stored together, with no consideration given as to whether the metadata always needs to be included. This is problematic. The more data that is included with each transaction, the more gas it costs, the more difficult it is for the blockchain to store that information, and the more cumbersome it is for nodes to store the history of the blockchain.Thus, Cardano separates the transfer and the why. They accomplish this by separating the platform into two distinct layers:The Cardano Settlement Layer (CSL): This layer is responsible for the token economics and the balances of all user accounts. Cardano\u2019s native currency, ADA, is transacted over this layer. In layman terms, this just means that all code relating to accounts and the ADA token exist on this layer.The Cardano Control Layer (CCL): All the smart contract functions exist on this layer. In addition, regulatory elements like digital identity can be supported by this layer.The CCL is the control tower of\u00a0CardanoThe CSL only maintains the actual transaction information\u200a\u2014\u200afor example: 3 ADA from Wallet A to Wallet B. By including only the simplified transaction information, the CSL can be like a standardized transacting protocol. Most, if not all possible transactions, are preprogrammed. Flexibility and customizability, while useful, can create security holes. However, with simple transactions, Cardano can anticipate and fix those holes from the beginning.However, Cardano still will support smart contracts. These are controlled from the CCL. The CCL allows for all the advanced programmable features of smart contracts. The why of transactions. The conditions and terms.The advantage of separating this layer from the CSL is two fold. First, it allows for the protection of transaction privacy because transactions can be conducted without the additional metadata Ethereum or NEO requires. Second, it allows for more focused scaling updates\u200a\u2014\u200afor example, the updates might only impact the computational layer without endangering user balances or the transactional ability of the network.The best way I understand this is that there are advantages to being a cryptocurrency and there are advantages to being a platform. Cryptocurrencies protocols are simple and efficient. Platform protocols are robust and flexible. Bitcoin and Litecoin are cryptocurrencies. Ethereum and Neo are platforms first and currencies second. Cardano is both. It is the best of both worlds.TLDR: Cardano splits its protocol into two layers. One layer is focused on transactions and accounts and the other layer is the computational layer for smart contracts. This allows for easier upgrades and enhanced flexibility.Proof of Stake\u00a0ProtocolIf you don\u2019t understand Proof of Stake (PoS), I recommend you read the explanation in my NEO article. It highlights the differences between PoS and what Ethereum uses: Proof of Work (PoW). Essentially, PoW uses computing power to determine who confirms the blocks on the blockchain and divvies up rewards according to how much computing power you contribute. With PoS, blocks are confirmed according to who holds the most tokens.In PoW, if you operate 5% of the total computing power of the network, you can expect to get 5% of the block rewards. In PoS, if you own 5% of tokens, you can also expect to receive 5% of block\u00a0rewards.You don\u2019t need all this equipment for\u00a0PoSCardano, like NEO, uses a Proof of Stake protocol. It is called Ouroboros. It is said to be the only PoS protocol with mathematically proven security. Recognize that, as with all of Cardano\u2019s technology, Ouroboros has been extensively peer-reviewed. Ouroboros specifically was developed with the help of the University of Edinburgh, University of Connecticut, IOHK, and the Tokyo Institute of Technology.As with NEO and Ark, Cardano uses a variation of the PoS protocol similar to Delegated Proof of Stake (dPoS). For reference, NEO refers to this as dBFT (delegated Byzantine Fault Tolerance). dPoS permits stake holders to \u201cvote and elect\u201d representatives, known as consensus nodes, who do the block confirmations for them. The block rewards are given to the consensus nodes who then provide a payout to the token holders who voted for them.Delegated PoS is kind of like how we elect these guys to make the decisions for\u00a0usWith Cardano, the system works slightly differently. Time is broken into what are called Epochs (each Epoch could be 20 minutes \u2014a totally arbitrary number). Within each Epoch, or 20 minute block, there are slots. Slots are just the to-be-mined blocks. A random algorithm selects one token holder for each slot to act as a consensus node. They are known as a slot leader. The slot leader then confirms the block and yields to the next randomly elected slot leader. All the block rewards are collected in a pool and are distributed to the slot leaders at the end of the epoch.Epochs act kind of like a shift schedule at your local Cold Stone Creamery. The schedule can be for any amount of time, just like with epochs\u200a\u2014\u200alet\u2019s say this schedule is a week. Each shift is known as a slot. Only one person can be working each shift (or slot), but we need to have a worker for every shift. Each worker is randomly selected. With Cardano, the more tokens (ADA) you have, the more likely you are to be elected\u200a\u2014\u200alike lottery tickets: the more you have, the better your odds. Users will also be able to pool their ADA together and share in the block rewards. Once that worker (slot leader) works their shift, the next person takes over. Epochs define slot leaders for each slot. Then, when that epoch ends, a new epoch comes online and defines all the slot leaders for that schedule. And so it goes.There is currently no staking on Cardano until the Shelley Update in Q2 of 2018. Much more information will become available then regarding exactly how the reward and staking system will work. As of now, the platform is entirely centralized as all the nodes are owned by Cardano. All network fees are collected and burned.With Cardano, extensive thought has gone into how to scale the platform. Ouroboros enables many advanced scaling options. Slot leaders can manage blocks on multiple chains. And multiple Epochs can be run simultaneously. Both of these enable a blockchain that can support scaling solutions like sidechains\u200a\u2014\u200amultiple chains that all interoperate\u200a\u2014\u200aand sharding\u200a\u2014\u200abreaking the larger blockchain into manageable \u201cchunks.\u201d It is important to note that none of this has been implemented yet. It is currently being researched and will be implemented when the network needs it, estimated to be towards the end of 2018.Comparison to NEO and Ethereum: Ethereum still uses Proof of Work, which is a severe disadvantage. They are however transitioning over to a PoS system. NEO uses what is called dBFT. NEO\u2019s system allows NEO token holders to elect consensus nodes who reach consensus on the next block, not unlike Cardano. The NEO team is in the process of relinquishing control over these consensus nodes. Ethereum is working towards sharding, sidechains, and other scaling solutions. NEO\u2019s platform already has implemented more scaling solutions than Ethereum but is working towards sidechains and interoperability.TLDR: Cardano uses a Proof of Stake system called Ouroboros. The network randomly elects a node to confirm the next block and the rewards are allocated to that node. The more tokens you have the more likely you are to be elected. Token holders can also \u201cvote\u201d for nodes by contributing their tokens to them and increasing the likelihood that they are elected.Coding LanguageCardano is coded in a language called Haskell. A programmer could give you a much better sense of the full scope of this, but I understand that Haskell language is a more precise code that employs mathematical verification methods in order to limit human error and confirm the correctness of the code. Essentially, the code has a better process for verifying that it is being written correctly. This conceivably will help prevent bugs and errors, such as the one that opened the way for the DAO Hack of Ethereum or the Parity Wallet catastrophe.Cardano does plan to incorporate multiple languages into its smart contract platform in the future.Ethereum and NEO comparison: NEO allows coding in a variety of the most common coding languages, providing developers with more flexibility. Ethereum created their own language called Solidity which is optimized for Ethereum smart contracts.TLDR: Cardano uses Haskell, a much more dynamic coding language.The WalletCardano\u2019s dedicated wallet is called Daedalus. The wallet supports the network token: ADA. The wallet was developed by IOHK and is supported by an impressive team of nine developers. The wallet will be critical for when Ouroboros, the proof of stake protocol, is implemented. From the wallet, users will be able to \u201cstake\u201d their tokens and potentially be elected to confirm blocks. Or they will be able to vote for other token holders to increase their odds and share in the block rewards.I find Cardano\u2019s dedication towards their wallet encouraging. It demonstrates the team\u2019s commitment towards all the elements of the platform.Ethereum and NEO comparison: NEO has a community developed wallet, NEON, that allows NEO holders to claim GAS. Ethereum has a variety of supported wallets.TLDR: Cardano developed their own wallet, Daedalus, which supports the token: ADA.GovernanceGovernance models are crucial when evaluating the future prospects of a blockchain. Consider this quote by Fred Ehrsam from this brilliant article:\u201cThe most successful blockchains will be those that can best adapt to their environments. Assuming these systems need to evolve to survive, initial design is important, but over a long enough timeline, the mechanisms for change are most important. \u201cSo what are Cardano\u2019s mechanisms for change?Cardano wants to implement blockchain based governance. That means that decisions regarding the future of the blockchain can be voted on by token holders and enacted into protocol. They envision a library of sorts where upgrades and modifications can be proposed and then voted on by ADA holders. A certain percentage of votes would need to be obtained for the protocol to be implemented.In comparison, off-chain governance systems also do have some semblance of voting, except there isn\u2019t a uniformed voting method between all the parties. Miners vote by dedicating their computing resources (or stake in the case of PoS) to whichever blockchain fork (version) they support. Users vote through use\u200a\u2014\u200awhich chain they decide to use. Exchanges also have a vote in the form of which token they decide to support. But all of this voting occurs after the fork. Thus, on-chain governance creates a system where everyone is voting in the same format, and voting happens before implementation. To understand forks better, read the explanation in this article.As an example, look at all the Bitcoin forks. With the governance method today, forks commonly occur, but no one supports the new Bitcoin (not including Bitcoin Cash which has been widely successful) and the new token dies. With an on-chain governance system, changes can be put up to a vote; if enough people support the change, it is implemented. They don\u2019t need to fork to gauge community interest.However, there are both pros and cons to this system.Pros: this system will likely help prevent hard forks. Creating a format for discussion and voting encourages smooth network updates without the headache of violent debates and contentious forks. It effectively democratizes the process and allows for equal voting rights according to token stake. This system also decentralizes the governance. Instead of just a handful of developers taking responsibility for proposals and updates, the whole community can participate.Cons: on-chain voting also has drawbacks. Any implemented feature becomes much harder to remove should there be an issue. Governance set in code is unchangeable. We are also trusting the community to make knowledgable decisions regarding protocol changes. Systems must be in place to prevent activities like trolling. Even just plain apathy would be harmful to this system.None of this governance system is currently in place; it\u2019s all still being developed. The details of the protocol and how it will address the above concerns remain to be seen.Comparison to Ethereum and NEO: Both Ethereum and NEO use off-chain governance models. With Ethereum, updates are proposed, reviewed, and then the network forks. Miners, users, and exchanges must decide which chain to use. Ethereum\u2019s community typically agrees on updates and thus, it is generally a smooth process. However, look at Ethereum and Ethereum Classic for an example of times when a fork did not go smoothly. NEO is more centralized than Ethereum; thus, updates and protocol changes can be quickly implemented by the team. This is inline with NEO\u2019s smart economy vision.TLDR: Cardano wants to implement on-chain governance where token holders can vote on community proposed updates to the blockchain. These updates are then encoded into the blockchain.TreasuryA portion of every block reward (25%) is placed into a treasury. This treasury is decentralized and can only be accessed through the voting mechanism described above. Imagine that the Cardano community wants to run a development competition. The details are proposed to the community and ADA holders vote and approve the competition. With the treasury, the community can then vote on how to fund the competition. With a consensus vote, funds from the treasury can support projects and upgrades to the network. Perhaps researchers would one day like to receive grants to study elements of Cardano and propose improvements. The treasury system could enable this.All this helps solve the issue of how should blockchains fund themselves after their supporting companies are gone? What will Ethereum do when Vitalik leaves and the Ethereum Foundation is dissolved? What will become of NEO when the NEO Council is no more? While these platforms will continue to be self sufficient, they won\u2019t necessarily have a way of funding new ecosystem developments. This is Cardano\u2019s solution.Again, recognize that this model has not yet been implemented.Comparison to Ethereum and NEO: NEO and Ethereum do not have on-chain funding mechanisms.TLDR: Cardano will have a treasury system, funded through 25% of block rewards. ADA token holders can vote on how to spend that money.TeamAs previously mentioned, the Cardano project is supported by three organizations. However, I think IOHK is the most relevant entity to the project, as they are conducting the actual development. Charles Hoskinson and Jeremy Wood head IOHK. Charles first co-founded Invictus Innovations which established Bitshares. He then moved to Ethereum as the enacting CEO. He has been the CEO of IOHK for almost three years.Jeremy also worked for Ethereum as the Executive Assistant. He has been the CSO of IOHK for nearly three years as well.Beyond these two, Cardano features small, interdisciplinary teams of academics and developers that work on individual projects. The development to-do list is tracked and new tasks are constantly given to teams as they finish projects. Teams work in two week intervals, releasing small, incremental updates to the main projects. Cardano focuses on time based releases instead of feature based releases. By not releasing huge updates, they avoid the issue of needing to coordinate the release of all the new features.I\u2019m impressed with the transparency and the professionalism of the team. Progress updates are constantly provided and I appreciate how the system utilizes a network of developers to work quickly and efficiently.Ethereum and NEO Comparison: All three projects feature powerful teams headed by intelligent thought leaders. It\u2019s hard to not give the advantage to Ethereum and Vitalik Buterin, the Michael Jordan of blockchain thinkers.Roadmap and Current\u00a0ProgressCardano\u2019s only working protocol right now is their SL Mainnet. This was launched on September 29th. SL is the Settlement Layer enabling ADA. Essentially, this means that Cardano is only a cryptocurrency; it will need to release other features to realize its promise of being a platform.Q2 of 2018 will be the next big release for Cardano. This release, titled Shelley, will enable many new features. These include: 1. The release of their proof of stake protocol\u200a\u2014\u200aOuroboros.2. Added incentives for running full nodes3. A wallet upgrade. This upgrade will include advanced security, multi-signatures (multiple passwords for the wallet), quantum resistant addresses, and checkpoints\u200a\u2014\u200aa process for speeding up the sync time for the blockchain.4. The release of their on-chain voting system.After this, releases will include their smart contract platform, treasury system, and advanced scaling methods.Cardano is designing its protocol with regulation and compliance in mind. They want to create an ecosystem that supports digital identity and can work with enterprises and governments within an existing economy. Much of their future developments will focus on this principal.TLDR: So far, Cardano has only released their Settlement Layer and thus, can only act as a cryptocurrency. Future developments are in store for smart contracts and other platform innovations.Additional Relevant Information:Cardano is modeling Ouroboros and other protocol features with Psi Calculus, a formal modeling language that is machine understandable. This allows them to test their protocols before they are actually implemented.As stated in the roadmap section, Cardano plans to implement quantum safe signatures, making their blockchain theoretically safe from quantum computers. NEO has this feature implemented while Ethereum does not.Cardano\u2019s thought process regarding every decision has been documented on their website. I have never seen such transparency from a project before.Cardano\u2019s token sale was audited. You can read the report here.The network has a booming social media following. Three associated twitter pages have 72k combined followers and their Reddit has 24k followers.Red Flags and\u00a0ConcernsAs with any project, it\u2019s critical that we are aware of all aspects of the project; the good and the bad.1. Still In DevelopmentCardano is still far from production ready. With the release of its SL mainnet, and native token, ADA, it is further along than some other 3rd generation blockchains such as EOS. However, we are likely still over 6 months away from just the implementation of their PoS protocol. There isn\u2019t even a release date for their smart contract platform\u200a\u2014\u200atheir CL and virtual machine. Until then, no dApps can be developed and no ICOs conducted. Ethereum already supports over 800 dApps. NEO is rapidly supporting more applications. While it\u2019s true that Cardano improves significantly on many aspects of Ethereum, Ethereum does have plans to implement scaling solutions that would close that gap. Even if Cardano is fully operational within a year, a year in the blockchain industry is an eternity in the normal world. It\u2019s possible that after a year, Ethereum will have such a chokehold on the dApp market and will be making significant progress towards its scaling solutions, that there is no place for Cardano. Right now, Cardano is a cryptocurrency; but Cardano\u2019s current $10.5 billion valuation is based on far more than it being a simple cryptocurrency.2. Governance and TreasuryCardano relies on a complicated governance system. The features of the system must be carefully crafted to align incentives and ensure that bad actors and trolls can\u2019t manipulate the system and wreak havoc. What if a group of proactive users is able to gain enough power and utilize the treasury for their own gain? While I do expect that the Cardano team will approach these questions carefully and methodically, it is still a factor to consider.ConclusionThe takeaway from this article should be such: Cardano is a 3rd generation platform that is building methodically, with peer reviewed technology, in order to address many of the scaling, privacy, and technological issues of today\u2019s 2nd generation blockchains, like Ethereum. Cardano has an advanced proof of stake protocol, a unique governance and treasury system, and a layered foundation that enables Cardano to act as both a cryptocurrency and a blockchain platform. It has a strong support network, a robust development team, and large community interest. The breadth of its roadmap is phenomenal and I am confident that Cardano can deliver on its promises.Even with all these benefits, it\u2019s difficult to effectively value Cardano and other 3rd generation platforms. Undoubtably, Cardano is doing a lot right. However, network effects play a significant role in platform valuations. Network effects refer to how the value of technology frequently depends upon how many people will use it. Thus, for Cardano to be successful, it must have users. Cardano is at least a year away from having a platform that can support users\u200a\u2014\u200aoutside of just sending and receiving ADA. Compare this to Ethereum and NEO, both of which have had large success in their respective markets. Ethereum controls the dApp development market today while NEO is making strides in being the platform in the East and enabling a smart economy. I don\u2019t see Cardano replacing either of these platforms; it won\u2019t replace NEO because their objectives and intended markets are different, and it won\u2019t replace Ethereum because I think Ethereum will succeed with many of its scaling solutions, closing the technological gap between it and Cardano.Regardless, I do think that the blockchain ecosystem can support more than one platform. Cardano\u2019s many strengths assure me that it is well situated to provide a strong alternative to Ethereum, perhaps as a platform with more flexibility and more security. For now, all we can do is wait; wait to see if Cardano stays true to its roadmap; wait to see if industries and enterprises take notice; wait and see if Cardano can be a powerhouse amongst blockchain platforms.", "responses": "110"}, {"title": "Ethereum Will Be the Backbone of the New\u00a0Internet", "author_name": "James Martin Duffy", "author_profile_link": "https://medium.com/@jamesmartinduffy", "link": "https://medium.com/loom-network/ethereum-will-be-the-backbone-of-the-new-internet-88718e08124f?source=search_post---------5", "post_date": "Jun 4, 2018", "readtime": "14 min read", "upvotes": "24K", "content": "Ethereum Will Be the Backbone of the New\u00a0InternetLoom Network is building our Layer 2 on top of Ethereum, instead of other blockchain platforms\u200a\u2014\u200aand here\u2019s\u00a0why.James Martin DuffyBlockedUnblockFollowFollowingJun 4, 2018Each month, another company publishes a whitepaper, claiming to have solved the scalability problems faced by Ethereum.These new blockchains claim to be better, faster, and smarter than Ethereum\u200a\u2014\u200athey say they can handle thousands, even millions of transactions per second (TPS), have no transaction fees, and have near-instant confirmation times.Yet at Loom Network, when we set out to build a platform for bringing large-scale decentralized mobile games and social networks to the mainstream, Ethereum was by far the most obvious choice to build on top of.In this article, I\u2019ll explain the reasons why we think Ethereum has already won the race to become the foundation of Web 3.0, and will become the fundamental base layer that all major DApp platforms will choose to build on top of in the future.Let\u2019s start with the most obvious.1. Ethereum has an order of magnitude more developers building on it than any other platform\u200a\u2014\u200aand this gap is widening by the\u00a0dayOur Ethereum code school CryptoZombies.io has now had over 207,623+ users since we launched it last November\u200a\u2014\u200aand this number has been growing consistently by over 30,000+ users per month, with no signs of slowing down.Truffle (a development framework for Etheruem) has had almost 550,000 downloads, growing at over 45,000+ users per month since January.Simply put, the number of developers building on top of Ethereum is not only growing\u200a\u2014\u200ait\u2019s accelerating.The number of developers using Ethereum\u2019s Truffle Suite each month is not only growing\u200a\u2014\u200ait\u2019s accelerating.That means if another blockchain platform wants to beat Ethereum in terms of developer adoption, it\u2019s not enough for it to catch up to where Ethereum is now\u200a\u2014\u200ait has to exceed Ethereum\u2019s growth rate moving forward.Why is developer adoption important?At the end of the day, it doesn\u2019t matter how many transactions per second your blockchain can handle if no one is actually using it.And in order to have applications worth using, you need to attract enough developers to build them.If you don\u2019t have developers building applications on your blockchain, you\u2019re effectively building a ghost\u00a0town.I\u2019m not sure what caused Steve Ballmer to go nuts on stage at this conference and create this classic moment in meme history, but I\u2019m including him here to emphasize my point: Developer adoption is everything.The blockchain platform that has the most developers building real-world applications on top of it will be the platform that gains the widest mainstream adoption. And not only does Ethereum have a massive head start in this area, but the gap is widening with each day that passes.And why is Ethereum attracting the most developers?2. Ethereum has better tools and infrastructure for DApp development than any other\u00a0platformTruffle. Infura. Web3.js. OpenZeppelin. Geth. Ganache. MetaMask. CryptoZombies. MyCrypto. Etherscan. ERC20 and ERC721.These are tools (among many others) that different developer teams have tirelessly poured hundreds of thousands of hours into\u200a\u2014\u200aand they\u2019re free to use for any Ethereum developer who wants to build a DApp on Ethereum.And this developer ecosystem is only growing as time goes on. Our team and at least a dozen others are in the process of building even more tools and infrastructure around Ethereum DApp development that will make Ethereum developers\u2019 lives even easier in the future.It\u2019s Metcalfe\u2019s law applied to developer infrastructure. The more developers building useful stuff, the easier (and more enjoyable) it becomes for new developers to build, and the effect compounds on itself.If you\u2019re a developer and you wanted to build a blockchain platform that replaces Ethereum, you would need to build equivalent versions of all of these tools on top of your own platform in order to compete with Ethereum\u2019s ease-of-use for developers.Or you could, you know\u2026 just build on top of Ethereum, and take advantage of all these things out of the box \ud83e\udd14But let\u2019s go one level\u00a0deeper.Let\u2019s talk about WHY developers would want to spend their time building these tools.And here\u2019s where we go really deep down the rabbit hole, and see where Ethereum really shines.Still with me? I haven\u2019t even gotten to the core of my argument\u200a\u2014\u200awe\u2019re just getting\u00a0started.3. Ethereum does not sacrifice decentralizationWhen it comes to Blockchains, there\u2019s a fundamental law called The Scalability Trilemma. It\u2019s kind of like a law of physics that says a blockchain can only have 2 of these 3 properties: decentralization, scalability, and security.What that means is, given the same level of security, if you want to increase a blockchain\u2019s scalability, you must sacrifice its decentralization.Why is this true?Due to the nature of blockchains, every single validator needs to run every single computation that occurs on the network to ensure its accuracy.So if you want the network to be sufficiently decentralized by having thousands of users running validators, the max number of transactions per second needs to be capped by what the average user\u2019s PC and network speed can handle.On the other hand, if you wanted to have the fastest, most scalable blockchain EVER, you should do the following:Require that all validators be supercomputersHave as few validators as possible on the network, to decrease the number of connections per nodePut all the validators in the same geographical area (country, data center) to decrease latency between nodesCan you see why that would be a really bad idea for a blockchain?And yet every project I\u2019ve seen that boasts a very high number of transactions per second is quietly making this decentralization tradeoff\u200a\u2014\u200amost of them are just not transparent about it to their users / investors.Why decentralization mattersThere\u2019s an excellent pair of blog posts from Chris Dixon and Spencer Bogart with the same title, \u201cWhy Decentralization Matters\u201d\u200a\u2014\u200aboth highly recommended reads.In his article, Chris Dixon makes a simple argument: Developers are a lot more incentivized to build on a platform that they know is NOT going to change the rules on them later down the line, taking away their audience and profits.If you build your application on Facebook or Apple\u2019s App Store, you have to trust that these platforms aren\u2019t going to ban you in the future, block certain users from using your app or seeing your updates, or start charging you higher fees to keep accessing the same audience.Ethereum, on the other hand, is what we call permissionless.Ethereum can be used by anyone for any purpose, without needing permission from\u00a0anyone.NO ONE can stop you from uploading a piece of code into the Ethereum blockchain, and NO ONE can stop your users from executing it.Let that sink in for a minute, because it\u2019s extremely powerful.For the first time in history, we have a platform that that no one can shut down and no one can censor\u200a\u2014\u200anot governments, not mega-corporations with tons of money, not the Rothschilds or Bogdanoffs or Reptilians or whatever conspiracy theory you subscribe to.If you build a DApp on Ethereum, no one can stop your users from anonymously accessing it.If you buy some tokens or digital items that are stored on the network, you are GUARANTEED they will stay there forever and no one will be able to take them away from you.And it\u2019s these permissionless and censorship-resistant properties of decentralized blockchains that have enabled us to have, for the first time in Internet history, true ownership of digital items.Yeah, I\u2019m talkin\u2019 about Ready Player One. With true ownership of digital items that cannot be taken away from you, blockchains enable us to do crazy new things in online games and virtual realities\u200a\u2014\u200alike having virtual avatars that aren\u2019t owned by any company and can persist between\u00a0worlds.More centralized platforms don\u2019t have this guaranteePretty much every platform that\u2019s been touted as the \u201cEthereum Killer\u201d has simply decided to trade off decentralization in favor of higher scalability, and advertise it as if it\u2019s a feature.And this tradeoff is tempting to make, because it seems like it\u2019s what the market wants.Users who don\u2019t know better complain about high fees and slow transaction times\u200a\u2014\u200aso we can\u2019t really blame developers for trying to give the market what it thinks it wants.In Spencer Bogart\u2019s Why Decentralization Matters, he says:It\u2019s not surprising that new users and developers have gravitated toward these newer networks: Improved throughput and functionality are things that users and developers can immediately appreciate, whereas the benefits of \u201cdecentralization\u201d as a feature are seemingly amorphous.In the short term, users may be tempted by the performance offered by more scalable blockchains, not realizing the importance of decentralization until a wake-up call brings everything crashing down.He continues:The reality, however, is that without decentralization these crypto networks lose their most important qualities of being \u201cpermissionless\u201d and \u201ccensorship-resistant\u201d\u200a\u2014\u200athat is, that anyone can use the network and anyone can build on top of them.After all, the entire point of a decentralized blockchain is to provide a hard-promise\u200a\u2014\u200aan immutable ledger with open, non-discriminatory participation. In a sense, we bear the inefficiency of decentralization because it is the only way to enable a network with these qualities.Other blockchains that achieve 1,000 TPS or higher do so by having a small, fixed number of nodes that validate all the transactions\u200a\u2014\u200a21 in the case of EOS, 101 in the case of Lisk.But a network run by 21 nodes requires that you trust these 21 publicly-identifiable nodes to not make changes to the protocol, or restrict certain people from using it for certain purposes in the future.It\u2019s a lot harder for a malicious entity to influence thousands of anonymous Ethereum nodes to censor certain transactions than it would be for them to gain influence over 15 out of 21 publicly-known block producers. Or for these 15 block producers to form a cartel and change the rules in ways that profit them, like what happens on centralized platforms. Or for a government or corporation to put pressure on these entities to censor certain transactions or users.As Spencer puts it:These semi-decentralized platforms are subject to the same social and economic pressures that motivate centralized platforms to censor certain users and activities, and therefore will trend toward the same outcome they\u2019re supposed to correct.If developers can\u2019t trust 100% that the base layer will always remain permissionless and censorship-resistant, then there\u2019s very little incentive for them to start building on the platform vs. simply using a traditional web server.By sacrificing base-layer decentralization in the nearsighted goal of attracting users by increasing throughput, these platforms have ironically undermined the entire motivation for using a blockchain in the first\u00a0place.And on top of that, increasing throughput on Layer 1 isn\u2019t even a scalable approach.It will get you some initial gains, but it\u2019s fundamentally bottlenecked by the nature of blockchains and not the way to achieve true scalability.Which brings me to my next point\u20264. It will be impossible to run all the world\u2019s decentralized applications on a single blockchain: Scaling has to occur on Layer\u00a02It would be absurd to try to run the Internet\u2019s 100 most popular games and social apps all on one giant supercomputer.Likewise, it\u2019s absurd to assume all the world\u2019s decentralized applications in the foreseeable future will run on one blockchain.Facebook alone needs hundreds of thousands of servers to function. Yet some people think a decentralized Facebook would share one massive blockchain with every other DApp in existence? \ud83e\udd14Let\u2019s look at some quick numbers.Facebook experiences 30,000+ Likes / Comments per second, the Nasdaq sees 20,000+ trades per second, and MMO games like PlayerUnknown\u2019s Battlegrounds handle over 1M concurrent users updating game state.It would only take a few dozen apps and games of this size before you\u2019re exceeding one million TPS in aggregate.And then what do you do when the number of users doubles?Clearly trying to run every single DApp on the same chain is not a practical approach.It doesn\u2019t matter if a blockchain can do a thousand transactions per second or a million transactions per second\u200a\u2014\u200ano single blockchain will be fast enough to handle all the world\u2019s decentralized applications on the same\u00a0chain.Scaling has to occur on Layer\u00a02The solution is obvious\u200a\u2014\u200athese applications will need to be split up across multiple blockchains.We realized this early on at Loom, when we presented the idea of application-specific sidechains. We foresaw that eventually some decentralized applications would grow popular enough to reach even 1/10th of Facebook\u2019s scale, and the only possible way to run them would be on their own dedicated chains.Of course, if you put these DApps that require thousands of transactions per second on their own standalone blockchains, they would be vulnerable to the same issues we discussed above in \u201cWhy Decentralization Matters.\u201dBut if you put them on a sidechain to a blockchain that is sufficiently decentralized (like Ethereum)\u200a\u2014\u200ayou get the best of both worlds.Sidechains provide higher scalability without sacrificing securityA sidechain can use a different consensus algorithm (like DPoS) optimized for DApps that require very high TPS or low-latency, while storing any tokens or data requiring a high level of security on the main chain.This way, even though the sidechain is less decentralized than the main chain, the amount of trust required by users is minimized, since they have the option to move anything of real value to the main chain for safe keeping. (Even more so if you secure the Layer 2 assets with Plasma Cash).By putting your DApp on a sidechain to a decentralized mainnet, you get all the benefits of higher scalability offered by a faster blockchain, while maintaining the same trust and security guarantees provided by the decentralized base layer.Spencer, in his article, arrives at the same conclusion we came to:The path forward: Highly decentralized base layer with increased centralization (and efficiency) on higher layersAnd in fact, this seems to be the same model envisioned by Vitalik Buterin himself:You could run StarCraft on the blockchain. Those kinds of things are possible. High level of security and scalability allows all these various other things to be built on top. Ethereum is a secure base layer that doesn\u2019t have too many features.~Vitalik ButerinEthereum provides a secure base layer for Layer 2 solutions to build on top\u00a0ofNow we understand that:Scaling needs to happen on Layer 2The most important property of a Layer 1 is decentralizationSo the real question is, if not Ethereum, what base layer would you build your Layer 2 on top of?We\u2019ve already seen that very few chains do decentralization as well as Ethereum does.According to a recent ConsenSys report, there are \u201cjust under 17,000 nodes running the Ethereum blockchain across six continents, making it the most decentralized blockchain platform in existence.\u201dAnd any additional features another blockchain might offer, such as higher throughput, gas-less transactions, low-latency transactions, etc., can simply be implemented as Layer 2 services on Ethereum.In fact, those features are exactly what we\u2019re building at Loom Network with ZombieChain\u200a\u2014\u200aa Layer 2, gas-free, low-latency DPoS sidechain to Ethereum.And that\u2019s just one of many Layer 2 scaling solutions under development.It\u2019s hard to fathom why a developer would want to replace Ethereum instead of simply building on top of it\u00a0\ud83e\udd14Ignoring the obvious motivation that doing so allows them raise hundreds of millions of dollars in an ICO\u2026 \ud83d\ude09\u201cIt\u2019s like Ethereum\u2026 but\u00a0BETTER.\u201dIt\u2019s kind of like reinventing the wheel.Sure, you might be able to build a slightly better base layer that still provides sufficient decentralization AND throws in some additional features.But then you\u2019d somehow need to convince all the developers to jump ship to use an untested platform\u200a\u2014\u200aand in the meantime, Ethereum developers could take whatever good ideas you had, and implement them on a Layer 2 chain on top of Ethereum.It\u2019s also extremely risky.If a Layer 2 platform gets hacked or exploited, users\u2019 loss is minimized because the majority of tokens and data of value is still safely stored on the Layer 1 (Ethereum).But if you build a new Layer 1 blockchain that stores tokens that users pay real money for, the odds that your code will be exploit-free out the gate are slim\u200a\u2014\u200aand in the case of an exploit, your users potentially have billions of dollars at stake.In programming circles, there\u2019s a rule that states \u201cDon\u2019t roll your own crypto.\u201dI\u2019m going to go ahead and predict that after we see the first major blockchain exploit in which millions or billions of dollars in token value evaporate into thin air, we\u2019ll start to hear a similar refrain among blockchain engineers:Don\u2019t roll your own Layer\u00a01.Which brings me to my final point\u20265. New platforms are unproven, while Ethereum\u2018s security has already stood the test of\u00a0timeAt the time of this writing, there\u2019s $61 billion in circulating ETH.That\u2019s a LOT of financial incentive for someone to try to hack / exploit the network.Thousands of aspiring h4x0rs over the past 3 years, trying and failing to find an exploit in\u00a0EthereumAnd yet to this day, almost 3 years after Ethereum\u2019s mainnet launch, no one has managed to find an exploit in the platform\u2019s security.Note: Exploits have been found in individual smart contracts that developers have deployed to Ethereum, but I\u2019m talking about the core platform itself.The more time that passes without an exploit being found (despite a lot of people trying), the higher the likelihood that the platform is secure and won\u2019t ever be exploited in the future.This is similar to what Nassim Taleb called The Lindy Effect:The Lindy effect is a concept that the future life expectancy of some non-perishable things like a technology or an idea is proportional to their current age, so that every additional period of survival implies a longer remaining life expectancy.Basically, when a new blockchain platform springs up, developers will be reluctant to use it because it hasn\u2019t stood the test of time.What if it\u2019s exploitable? What if it\u2019s not truly decentralized? Why should I invest all my time building my DApp on top of it when I\u2019m not sure if it\u2019ll be around two years from now?The longer the chain survives without suffering a major exploit, the more trustworthy and legitimate it becomes in developers\u2019 eyes.Yet again, Ethereum has a massive head start\u00a0here.For a new blockchain platform that launches today, it will take a few years before it has survived long enough for developers to view it as trustworthy.But in that same time, Ethereum will continue to race ahead in terms of developer adoption and supporting infrastructure. (Not to mention real, live DApps and end-users).Because Ethereum has such a long head start on all other smart contract platforms, it will always appear to be a better option from a security standpoint compared to a younger blockchain.Especially when, as we mentioned before, any new feature a new smart contract platform adds that might tempt developers away can simply be built on Layer 2\u200a\u2014\u200aand still keep the security promises of Ethereum.Conclusion: Ethereum isn\u2019t perfect\u200a\u2014\u200abut at this point, it\u2019s hard to imagine it being displaced as the de facto Layer 1 for decentralized applicationsJavaScript isn\u2019t a perfect programming language, and for the longest time it was plagued with some pretty serious problems. But that didn\u2019t stop it from becoming the de facto programming language of Web 2.0.I predict we\u2019ve already reached the tipping point where we\u2019ll see the same thing happen with Ethereum for Web 3.0.For all its flaws and short-comings, it also has some of the smartest minds in the industry working on solving them\u200a\u2014\u200aand building tools and infrastructure to make them less of a hindrance.And thus we come full circle to my developers argument. (Go ahead, you can watch that Steve Ballmer clip again. I won\u2019t tell anyone. \ud83d\ude09)It\u2019s possible that, in the future, another project will spring up that offers some significant advantages over Ethereum, and manage to get all the Ethereum developers to jump ship\u2026But I wouldn\u2019t bet my ERC20s on it.", "responses": "97"}, {"title": "A beginner\u2019s guide to\u00a0Ethereum", "author_name": "Linda Xie", "author_profile_link": "https://blog.coinbase.com/@linda.xie", "link": "https://blog.coinbase.com/a-beginners-guide-to-ethereum-46dd486ceecf?source=search_post---------6", "post_date": "Feb 23, 2017", "readtime": "5 min read", "upvotes": "7.4K", "content": "A beginner\u2019s guide to\u00a0EthereumLinda XieBlockedUnblockFollowFollowingFeb 23, 2017What is Ethereum?According to the Ethereum website, \u201cEthereum is a decentralized platform that runs smart contracts.\u201d This is an accurate summary but in my experience when first explaining Ethereum to friends, family, and strangers it helps to compare Ethereum to Bitcoin since a lot of people have at least heard about Bitcoin before. This beginner\u2019s guide should help those who are new to Ethereum to understand the high level differences between the two.ComparisonSimply put, Bitcoin can be described as digital money. Bitcoin has been around for eight years and is used to transfer money from one person to another. It is commonly used as a store of value and has been a critical way for the public to understand the concept of a decentralized digital currency.Ethereum is different than Bitcoin in that it allows for smart contracts which can be described as highly programmable digital money. Imagine automatically sending money from one person to another but only when a certain set of conditions are met. For example an individual wants to purchase a home from another person. Traditionally there are multiple third parties involved in the exchange including lawyers and escrow agents which makes the process unnecessarily slow and expensive. With Ethereum, a piece of code could automatically transfer the home ownership to the buyer and the funds to the seller after a deal is agreed upon without needing a third party to execute on their behalf.The potential for this is incredible! Think of the numerous applications that act as a third party to connect you with others based on some set logic (e.g. Uber, Airbnb, eBay). Many of the centralized systems we use today could be built in a decentralized manner on Ethereum. With Ethereum you can make these transactions trustless which opens up an entire world of decentralized applications. Decentralization is important because it eliminates single points of failure or control. This makes internal collusion and external attacks impractical. Decentralized platforms cut out the middlemen which ultimately leads to lower costs for the user. There are a few decentralized applications I am particularly excited about.IdentityThere are many websites a person can create a digital identity on (e.g. Facebook, Twitter, LinkedIn). This is cumbersome to manage and at the end of the day you are not in full control of your information as it is still owned by a centralized entity. With Ethereum you can have a decentralized identity management system like uPort that allows you to be in full control of your data. There is no centralized server that has access to your private data, can get hacked, edit your information, or get shut down.Right now in the US we have credit bureaus (e.g. Experian, TransUnion, Equifax) that other institutions like banks rely on to tell them your credit. Credit bureaus can put certain groups such as international and young people at a disadvantage. Lending Club, a peer to peer lending platform, addresses the problem of traditional financial services relying solely on FICO scores by offering additional data points like home ownership, income, and length of employment. Ethereum applications like uPort can go one step further by allowing you to control your own data, identity, and reputation.Computing Power / StorageConsider all of the spare computing power and storage a regular person might have on their computer. If it is not being used, then why not make it available to someone else? It is a similar concept to renting out a spare bedroom on Airbnb. An added benefit to using a decentralized application is that there are no centralized servers that are prone to censorship.There are several projects in development to allow people to rent spare computing power and storage from those that have it. Filecoin allows people to rent out their computer storage to others and get paid for it. Similarly, Golem allows people to rent out their computing power. Ideas like these are not completely new. Since 2000, Folding@home has allowed volunteers to contribute spare computing power for scientific research at Stanford University. Now this concept can be monetized and applied to other industries, potentially lowering costs.Social MediaAkasha is a decentralized social media platform. There are no centralized servers so no single party has complete control over the content. This means that the platform is resistant to censorship. An added benefit of building a decentralized application for social media on Ethereum is that one can create a system that financially rewards high quality content. This is like Reddit but you can send small amounts of money to the poster instead of upvotes.Rights ManagementDecentralized applications may be used to bring transparency to multiple industries. For example SingularDTV offers an entertainment rights management platform which allows transparent distribution of funds to the creators, investors, crew, actors, and others involved in a project. There is no centralized party which can prevent a certain group from getting access to their funds because the terms are enforced by code. Everyone will get paid according to the terms discussed up front and no third party is needed to mediate.Managing CompaniesA time consuming and often expensive aspect of starting a new company is allocating and managing shares. As companies grow and raise more funds they eventually need to issue and move shares around. Aragon is an example of a promising project that has an easy to use interface for managing the company\u2019s cap table and raising capital.Raising CapitalLastly, one of the major use cases for Ethereum is decentralized fundraising from a global network of investors. Crowdsales lower the barrier to entry for developers working on high risk projects. Since Ethereum launched in July 2015 we have seen unprecedented amounts of funds raised for decentralized applications through crowdsales. Ethereum itself was funded through a crowdsale that raised $18 million in bitcoin and a project called The DAO raised $160 million. Some other notable crowdsales are shown below:Amount raised at time of crowdsale (not implied valuation)For more information about how these tokens work, refer to How to Raise Money on a Blockchain with a Token, Blockchain Token Securities Law Framework, and The difference between App Coins and Protocol Tokens.ResourcesThis post only covered a handful of Ethereum\u2019s countless use cases. The space is constantly growing and innovating. Below are some links that may help you understand Ethereum further and keep up with the exciting news.Understanding EthereumEthereum is the Forefront of Digital CurrencyApp Coins and the Dawn of the Decentralized Business ModelEthereum whitepaperBits on Block Gentle Introduction SeriesProof of Stake FAQKeeping up with EthereumEthereum SubredditWeek in Ethereum NewsThe ControlSmith + CrownThe Dapp DailySilicon Valley Ethereum Meetup (check out your local meetup)Thank you to Will Warren, Fred Ehrsam, and many Coinbase employees especially Jordan Clifford, Reuben Bramanathan, Ankur Nandwani, Dan Romero, and Jeremy Henrickson.", "responses": "50"}, {"title": "Ethereum Limited Private Sale Procedure", "author_name": "Ethereum Limited", "author_profile_link": "https://medium.com/@ethereumlimited", "link": "https://medium.com/@ethereumlimited/ethereum-limited-private-sale-procedure-9401b7188841?source=search_post---------7", "post_date": "Jul 14, 2018", "readtime": "", "upvotes": "4.4K", "content": "Ethereum Limited Private\u00a0SaleEthereum Limited Private Sale ProcedureEthereum LimitedBlockedUnblockFollowFollowingJul 14, 2018Ethereum Limited will conduct its Private Sale today, July 15, 2018 at 15:00 GMT.We allocated only 8% of the maximum supply or 800,000 tokens at $0.40 each for the Private Sale.A minimum of $200 purchase is required with no maximum purchase amount unlike in the ICO which is going to be limited.4 Easy Steps to Buy ETHL in the Private\u00a0Sale1. Log in to your ETHL account. Register here https://goo.gl/ymw9t2.\u00a02. Deposit at least $200 worth of BTC or ETH.\u00a03. The option to get whitelisted will appear after the deposit is confirmed.\u00a04. Purchase your ETHL tokens.Whitelist option will appear once minimum deposit amount is\u00a0met.For more information about Ethereum Limited, check out our social media accounts below.Website\u00a0https://goo.gl/ymw9t2Whitepaper\u00a0https://goo.gl/TTZDmkFacebook\u00a0https://www.facebook.com/ethereumlimited/Twitterhttps://twitter.com/EthereumLimitedInstagramhttps://www.instagram.com/ethereumlimited/Reddithttps://www.reddit.com/user/ethereumlimitedLinkedInhttps://www.linkedin.com/in/ethereumlimitedMedium\u00a0https://www.medium.com/@ethereumlimitedTelegram Chat\u00a0https://www.t.me/EthereumLimitedTelegram Channel\u00a0https://www.t.me/EthereumLimitedChannelANN\u00a0https://bitcointalk.org/index.php?topic=4521586Unofficial ANN\u00a0https://bitcointalk.org/index.php?topic=4576117Bounty Program\u00a0https://bitcointalk.org/index.php?topic=4539121", "responses": "1"}, {"title": "Announcing EnjinX: Ad-Free, User-Friendly Ethereum Blockchain Explorer", "author_name": "Ilija Rolovi\u0107", "author_profile_link": "https://blog.enjincoin.io/@IlijaRolovic", "link": "https://blog.enjincoin.io/announcing-enjinx-ad-free-user-friendly-ethereum-blockchain-explorer-3d679ba034c8?source=search_post---------8", "post_date": "Dec 27, 2018", "readtime": "8 min read", "upvotes": "26K", "content": "Announcing EnjinX: Ad-Free, User-Friendly Ethereum Blockchain ExplorerEnjinX is a modern, fast, responsive web app for exploring Ethereum, ERC-20 tokens & blockchain data. Bitcoin, ERC-1155, ERC-721, Litecoin & Dogecoin support will come in 2019, making EnjinX the first universal blockchain explorer\u2014ever.Ilija Rolovi\u0107BlockedUnblockFollowFollowingDec 27, 2018After more than a year of development, we are overjoyed to announce EnjinX\u200a\u2014\u200aan Ethereum explorer designed with a pivotal mission in mind: to speed up mainstream adoption of blockchain technology by making its data easily accessible to everyone.We created it to support Ethereum\u2019s mission to together build a more globally accessible, more free, and more trustworthy Internet.Built to advance the growing Ethereum ecosystem, EnjinX is ultra-modern, minimal, usable, fast, and ad-free\u200a\u2014\u200amaking the understanding and use of Ethereum as simple, streamlined, and enjoyable as possible.Check out EnjinX on Product Hunt\u200a\u2014\u200aand join the Launch Giveaway.", "responses": "686"}]